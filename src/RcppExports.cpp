// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Rcpp_graph_kernel_smoother
List Rcpp_graph_kernel_smoother(List adj, List w, NumericVector y, int bandwidth, bool with_details);
RcppExport SEXP _gflow_Rcpp_graph_kernel_smoother(SEXP adjSEXP, SEXP wSEXP, SEXP ySEXP, SEXP bandwidthSEXP, SEXP with_detailsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type adj(adjSEXP);
    Rcpp::traits::input_parameter< List >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type bandwidth(bandwidthSEXP);
    Rcpp::traits::input_parameter< bool >::type with_details(with_detailsSEXP);
    rcpp_result_gen = Rcpp::wrap(Rcpp_graph_kernel_smoother(adj, w, y, bandwidth, with_details));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_adaptive_mean_shift_gfa
Rcpp::List rcpp_adaptive_mean_shift_gfa(const NumericMatrix& X, int k, int density_k, int n_steps, double initial_step_size, int ikernel, double dist_normalization_factor, bool average_direction_only, double momentum, double increase_factor, double decrease_factor);
RcppExport SEXP _gflow_rcpp_adaptive_mean_shift_gfa(SEXP XSEXP, SEXP kSEXP, SEXP density_kSEXP, SEXP n_stepsSEXP, SEXP initial_step_sizeSEXP, SEXP ikernelSEXP, SEXP dist_normalization_factorSEXP, SEXP average_direction_onlySEXP, SEXP momentumSEXP, SEXP increase_factorSEXP, SEXP decrease_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type density_k(density_kSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    Rcpp::traits::input_parameter< double >::type initial_step_size(initial_step_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type ikernel(ikernelSEXP);
    Rcpp::traits::input_parameter< double >::type dist_normalization_factor(dist_normalization_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type average_direction_only(average_direction_onlySEXP);
    Rcpp::traits::input_parameter< double >::type momentum(momentumSEXP);
    Rcpp::traits::input_parameter< double >::type increase_factor(increase_factorSEXP);
    Rcpp::traits::input_parameter< double >::type decrease_factor(decrease_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_adaptive_mean_shift_gfa(X, k, density_k, n_steps, initial_step_size, ikernel, dist_normalization_factor, average_direction_only, momentum, increase_factor, decrease_factor));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_knn_adaptive_mean_shift_gfa
Rcpp::List rcpp_knn_adaptive_mean_shift_gfa(const NumericMatrix& X, int k, int density_k, int n_steps, double step_size, int ikernel, double dist_normalization_factor, bool average_direction_only);
RcppExport SEXP _gflow_rcpp_knn_adaptive_mean_shift_gfa(SEXP XSEXP, SEXP kSEXP, SEXP density_kSEXP, SEXP n_stepsSEXP, SEXP step_sizeSEXP, SEXP ikernelSEXP, SEXP dist_normalization_factorSEXP, SEXP average_direction_onlySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type density_k(density_kSEXP);
    Rcpp::traits::input_parameter< int >::type n_steps(n_stepsSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type ikernel(ikernelSEXP);
    Rcpp::traits::input_parameter< double >::type dist_normalization_factor(dist_normalization_factorSEXP);
    Rcpp::traits::input_parameter< bool >::type average_direction_only(average_direction_onlySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_knn_adaptive_mean_shift_gfa(X, k, density_k, n_steps, step_size, ikernel, dist_normalization_factor, average_direction_only));
    return rcpp_result_gen;
END_RCPP
}

RcppExport void C_columnwise_eval(void *, void *, void *, void *, void *);
RcppExport void C_columnwise_TS_norm(void *, void *, void *, void *);
RcppExport void C_columnwise_weighting(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_columnwise_wmean(void *, void *, void *, void *, void *, void *);
RcppExport void C_columnwise_wmean_BB(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_columnwise_wmean_BB_CrI_1(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_columnwise_wmean_BB_CrI_2(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_columnwise_wmean_BB_qCrI(void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_create_ED_grid_2D(void *, void *, void *, void *, void *, void *);
RcppExport void C_create_ED_grid_3D(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_create_ED_grid_xD(void *, void *, void *, void *, void *, void *);
RcppExport void C_create_ENPs_grid_2D(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_create_ENPs_grid_3D(void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_cv_deg0_binloss(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_cv_deg0_mae(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_cv_mae_1D(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_deg0_loo_llm_1D(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_epanechnikov_kernel_with_stop(void *, void *, void *, void *, void *);
RcppExport void C_get_BB_Eyg(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_get_bws(void *, void *, void *, void *, void *, void *);
RcppExport void C_get_bws_with_minK_a(void *, void *, void *, void *, void *, void *);
RcppExport void C_get_Eyg_CrI(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_get_Eygs(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_kernel_eval(void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_beta(void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_beta_perms(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_fit_and_predict(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_fit_and_predict_BB_CrI(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_fit_and_predict_global_BB(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_fit_and_predict_global_BB_CrI(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_llm_1D_fit_and_predict_global_BB_qCrI(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_loo_llm_1D(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_matrix_wmeans(void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_mllm_1D_fit_and_predict(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_mstree(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_normalize_dist(void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_pearson_wcor(void *, void *, void *, void *, void *);
RcppExport void C_pearson_wcor_BB_qCrI(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_predict_1D(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport void C_runif_simplex(void *, void *);
RcppExport void C_tr_exponential_kernel_with_stop(void *, void *, void *, void *, void *);
RcppExport void C_triangular_kernel_with_stop(void *, void *, void *, void *, void *);
RcppExport void C_wasserstein_distance_1D(void *, void *, void *, void *);
RcppExport void C_wpredict_1D(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *);
RcppExport SEXP S_adaptive_uggmalo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_agemalo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_amagelo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_analyze_function_aware_weights(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_angular_wasserstein_index(SEXP, SEXP, SEXP);
RcppExport SEXP S_compute_geodesic_stats(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_compute_vertex_geodesic_stats(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_construct_function_aware_graph(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_construct_graph_gradient_flow(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_convert_adjacency_to_edge_matrix(SEXP, SEXP);
RcppExport SEXP S_create_basin_cx(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_gflow_cx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_hHN_graph(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_iknn_graphs(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_maximal_packing(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_mknn_graph(SEXP, SEXP);
RcppExport SEXP S_create_mknn_graphs(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_mst_completion_graph(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_nerve_complex(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_path_graph_plm(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_path_graph_plus(SEXP, SEXP, SEXP);
RcppExport SEXP S_create_path_graph_series(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_single_iknn_graph(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_create_uniform_grid_graph(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_cv_imputation(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_deg0_lowess_graph_smoothing(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_detect_local_extrema(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_ecdf(SEXP);
RcppExport SEXP S_eigen_ulogit(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_estimate_local_density_over_grid(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_ext_graph_diffusion_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_extract_skeleton_graph(SEXP);
RcppExport SEXP S_find_gflow_basins(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_find_graph_paths_within_radius(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_find_local_extrema(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_get_path_data(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_get_simplex_counts(SEXP);
RcppExport SEXP S_graph_connected_components(SEXP);
RcppExport SEXP S_graph_constrained_gradient_flow_trajectories(SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_deg0_lowess(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_deg0_lowess_cv_mat(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_diffusion_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_kernel_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_kmean(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_kmean_cv(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_kmean_wmad_cv(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_mad(SEXP, SEXP);
RcppExport SEXP S_graph_MS_cx_using_short_h_hops(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_MS_cx_with_path_search(SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectral_filter(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectral_lowess(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectral_lowess_mat(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectral_ma_lowess(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectral_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_graph_spectrum(SEXP, SEXP);
RcppExport SEXP S_graph_spectrum_plus(SEXP, SEXP, SEXP);
RcppExport SEXP S_harmonic_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_instrumented_gds(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_join_graphs(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_loc_const_vertices(SEXP, SEXP, SEXP);
RcppExport SEXP S_mabilo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_mabilo_plus(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_mabilog(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_maelog(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_magelog(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_mean_shift_data_smoother(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_mean_shift_data_smoother_adaptive(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_mean_shift_data_smoother_with_grad_field_averaging(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_nada_graph_spectral_lowess(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_nerve_cx_spectral_filter(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_parameterize_circular_graph(SEXP, SEXP, SEXP);
RcppExport SEXP S_perform_harmonic_smoothing(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_pgmalo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_rlaplace(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_set_function_values(SEXP, SEXP);
RcppExport SEXP S_set_weight_scheme(SEXP, SEXP, SEXP);
RcppExport SEXP S_shortest_path(SEXP, SEXP, SEXP);
RcppExport SEXP S_solve_full_laplacian(SEXP, SEXP, SEXP);
RcppExport SEXP S_spectral_lowess_graph_smoothing(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_ugg_get_path_data(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_uggmalo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_uggmalog(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_ulogit(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_univariate_gkmm(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_upgmalo(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP S_wgraph_prune_long_edges(SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_gflow_Rcpp_graph_kernel_smoother", (DL_FUNC) &_gflow_Rcpp_graph_kernel_smoother, 5},
    {"_gflow_rcpp_adaptive_mean_shift_gfa", (DL_FUNC) &_gflow_rcpp_adaptive_mean_shift_gfa, 11},
    {"_gflow_rcpp_knn_adaptive_mean_shift_gfa", (DL_FUNC) &_gflow_rcpp_knn_adaptive_mean_shift_gfa, 8},
    {"C_columnwise_eval",                       (DL_FUNC) &C_columnwise_eval,                        5},
    {"C_columnwise_TS_norm",                    (DL_FUNC) &C_columnwise_TS_norm,                     4},
    {"C_columnwise_weighting",                  (DL_FUNC) &C_columnwise_weighting,                   7},
    {"C_columnwise_wmean",                      (DL_FUNC) &C_columnwise_wmean,                       6},
    {"C_columnwise_wmean_BB",                   (DL_FUNC) &C_columnwise_wmean_BB,                    7},
    {"C_columnwise_wmean_BB_CrI_1",             (DL_FUNC) &C_columnwise_wmean_BB_CrI_1,              8},
    {"C_columnwise_wmean_BB_CrI_2",             (DL_FUNC) &C_columnwise_wmean_BB_CrI_2,              8},
    {"C_columnwise_wmean_BB_qCrI",              (DL_FUNC) &C_columnwise_wmean_BB_qCrI,               9},
    {"C_create_ED_grid_2D",                     (DL_FUNC) &C_create_ED_grid_2D,                      6},
    {"C_create_ED_grid_3D",                     (DL_FUNC) &C_create_ED_grid_3D,                      8},
    {"C_create_ED_grid_xD",                     (DL_FUNC) &C_create_ED_grid_xD,                      6},
    {"C_create_ENPs_grid_2D",                   (DL_FUNC) &C_create_ENPs_grid_2D,                    7},
    {"C_create_ENPs_grid_3D",                   (DL_FUNC) &C_create_ENPs_grid_3D,                    9},
    {"C_cv_deg0_binloss",                       (DL_FUNC) &C_cv_deg0_binloss,                       14},
    {"C_cv_deg0_mae",                           (DL_FUNC) &C_cv_deg0_mae,                           14},
    {"C_cv_mae_1D",                             (DL_FUNC) &C_cv_mae_1D,                             16},
    {"C_deg0_loo_llm_1D",                       (DL_FUNC) &C_deg0_loo_llm_1D,                        7},
    {"C_epanechnikov_kernel_with_stop",         (DL_FUNC) &C_epanechnikov_kernel_with_stop,          5},
    {"C_get_BB_Eyg",                            (DL_FUNC) &C_get_BB_Eyg,                            19},
    {"C_get_bws",                               (DL_FUNC) &C_get_bws,                                6},
    {"C_get_bws_with_minK_a",                   (DL_FUNC) &C_get_bws_with_minK_a,                    6},
    {"C_get_Eyg_CrI",                           (DL_FUNC) &C_get_Eyg_CrI,                           19},
    {"C_get_Eygs",                              (DL_FUNC) &C_get_Eygs,                              17},
    {"C_kernel_eval",                           (DL_FUNC) &C_kernel_eval,                            5},
    {"C_llm_1D_beta",                           (DL_FUNC) &C_llm_1D_beta,                            8},
    {"C_llm_1D_beta_perms",                     (DL_FUNC) &C_llm_1D_beta_perms,                     11},
    {"C_llm_1D_fit_and_predict",                (DL_FUNC) &C_llm_1D_fit_and_predict,                12},
    {"C_llm_1D_fit_and_predict_BB_CrI",         (DL_FUNC) &C_llm_1D_fit_and_predict_BB_CrI,         13},
    {"C_llm_1D_fit_and_predict_global_BB",      (DL_FUNC) &C_llm_1D_fit_and_predict_global_BB,      11},
    {"C_llm_1D_fit_and_predict_global_BB_CrI",  (DL_FUNC) &C_llm_1D_fit_and_predict_global_BB_CrI,  13},
    {"C_llm_1D_fit_and_predict_global_BB_qCrI", (DL_FUNC) &C_llm_1D_fit_and_predict_global_BB_qCrI, 13},
    {"C_loo_llm_1D",                            (DL_FUNC) &C_loo_llm_1D,                            11},
    {"C_matrix_wmeans",                         (DL_FUNC) &C_matrix_wmeans,                          9},
    {"C_mllm_1D_fit_and_predict",               (DL_FUNC) &C_mllm_1D_fit_and_predict,               12},
    {"C_mstree",                                (DL_FUNC) &C_mstree,                                 7},
    {"C_normalize_dist",                        (DL_FUNC) &C_normalize_dist,                         7},
    {"C_pearson_wcor",                          (DL_FUNC) &C_pearson_wcor,                           5},
    {"C_pearson_wcor_BB_qCrI",                  (DL_FUNC) &C_pearson_wcor_BB_qCrI,                  10},
    {"C_predict_1D",                            (DL_FUNC) &C_predict_1D,                            11},
    {"C_runif_simplex",                         (DL_FUNC) &C_runif_simplex,                          2},
    {"C_tr_exponential_kernel_with_stop",       (DL_FUNC) &C_tr_exponential_kernel_with_stop,        5},
    {"C_triangular_kernel_with_stop",           (DL_FUNC) &C_triangular_kernel_with_stop,            5},
    {"C_wasserstein_distance_1D",               (DL_FUNC) &C_wasserstein_distance_1D,                4},
    {"C_wpredict_1D",                           (DL_FUNC) &C_wpredict_1D,                           11},
    {"S_adaptive_uggmalo",                                   (DL_FUNC) &S_adaptive_uggmalo,                                   18},
    {"S_agemalo",                                            (DL_FUNC) &S_agemalo,                                            19},
    {"S_amagelo",                                            (DL_FUNC) &S_amagelo,                                            19},
    {"S_analyze_function_aware_weights",                     (DL_FUNC) &S_analyze_function_aware_weights,                     12},
    {"S_angular_wasserstein_index",                          (DL_FUNC) &S_angular_wasserstein_index,                           3},
    {"S_compute_geodesic_stats",                             (DL_FUNC) &S_compute_geodesic_stats,                              9},
    {"S_compute_vertex_geodesic_stats",                      (DL_FUNC) &S_compute_vertex_geodesic_stats,                       7},
    {"S_construct_function_aware_graph",                     (DL_FUNC) &S_construct_function_aware_graph,                     14},
    {"S_construct_graph_gradient_flow",                      (DL_FUNC) &S_construct_graph_gradient_flow,                       6},
    {"S_convert_adjacency_to_edge_matrix",                   (DL_FUNC) &S_convert_adjacency_to_edge_matrix,                    2},
    {"S_create_basin_cx",                                    (DL_FUNC) &S_create_basin_cx,                                     3},
    {"S_create_gflow_cx",                                    (DL_FUNC) &S_create_gflow_cx,                                    12},
    {"S_create_hHN_graph",                                   (DL_FUNC) &S_create_hHN_graph,                                    3},
    {"S_create_iknn_graphs",                                 (DL_FUNC) &S_create_iknn_graphs,                                  7},
    {"S_create_maximal_packing",                             (DL_FUNC) &S_create_maximal_packing,                              5},
    {"S_create_mknn_graph",                                  (DL_FUNC) &S_create_mknn_graph,                                   2},
    {"S_create_mknn_graphs",                                 (DL_FUNC) &S_create_mknn_graphs,                                  7},
    {"S_create_mst_completion_graph",                        (DL_FUNC) &S_create_mst_completion_graph,                         3},
    {"S_create_nerve_complex",                               (DL_FUNC) &S_create_nerve_complex,                                3},
    {"S_create_path_graph_plm",                              (DL_FUNC) &S_create_path_graph_plm,                               3},
    {"S_create_path_graph_plus",                             (DL_FUNC) &S_create_path_graph_plus,                              3},
    {"S_create_path_graph_series",                           (DL_FUNC) &S_create_path_graph_series,                            4},
    {"S_create_single_iknn_graph",                           (DL_FUNC) &S_create_single_iknn_graph,                            4},
    {"S_create_uniform_grid_graph",                          (DL_FUNC) &S_create_uniform_grid_graph,                           5},
    {"S_cv_imputation",                                      (DL_FUNC) &S_cv_imputation,                                      12},
    {"S_deg0_lowess_graph_smoothing",                        (DL_FUNC) &S_deg0_lowess_graph_smoothing,                        20},
    {"S_detect_local_extrema",                               (DL_FUNC) &S_detect_local_extrema,                                6},
    {"S_ecdf",                                               (DL_FUNC) &S_ecdf,                                                1},
    {"S_eigen_ulogit",                                       (DL_FUNC) &S_eigen_ulogit,                                        8},
    {"S_estimate_local_density_over_grid",                   (DL_FUNC) &S_estimate_local_density_over_grid,                    6},
    {"S_ext_graph_diffusion_smoother",                       (DL_FUNC) &S_ext_graph_diffusion_smoother,                       23},
    {"S_extract_skeleton_graph",                             (DL_FUNC) &S_extract_skeleton_graph,                              1},
    {"S_find_gflow_basins",                                  (DL_FUNC) &S_find_gflow_basins,                                   6},
    {"S_find_graph_paths_within_radius",                     (DL_FUNC) &S_find_graph_paths_within_radius,                      4},
    {"S_find_local_extrema",                                 (DL_FUNC) &S_find_local_extrema,                                  4},
    {"S_get_path_data",                                      (DL_FUNC) &S_get_path_data,                                      10},
    {"S_get_simplex_counts",                                 (DL_FUNC) &S_get_simplex_counts,                                  1},
    {"S_graph_connected_components",                         (DL_FUNC) &S_graph_connected_components,                          1},
    {"S_graph_constrained_gradient_flow_trajectories",       (DL_FUNC) &S_graph_constrained_gradient_flow_trajectories,        3},
    {"S_graph_deg0_lowess",                                  (DL_FUNC) &S_graph_deg0_lowess,                                   7},
    {"S_graph_deg0_lowess_cv_mat",                           (DL_FUNC) &S_graph_deg0_lowess_cv_mat,                           14},
    {"S_graph_diffusion_smoother",                           (DL_FUNC) &S_graph_diffusion_smoother,                           13},
    {"S_graph_kernel_smoother",                              (DL_FUNC) &S_graph_kernel_smoother,                              17},
    {"S_graph_kmean",                                        (DL_FUNC) &S_graph_kmean,                                         5},
    {"S_graph_kmean_cv",                                     (DL_FUNC) &S_graph_kmean_cv,                                      8},
    {"S_graph_kmean_wmad_cv",                                (DL_FUNC) &S_graph_kmean_wmad_cv,                                 8},
    {"S_graph_mad",                                          (DL_FUNC) &S_graph_mad,                                           2},
    {"S_graph_MS_cx_using_short_h_hops",                     (DL_FUNC) &S_graph_MS_cx_using_short_h_hops,                      4},
    {"S_graph_MS_cx_with_path_search",                       (DL_FUNC) &S_graph_MS_cx_with_path_search,                        3},
    {"S_graph_spectral_filter",                              (DL_FUNC) &S_graph_spectral_filter,                              19},
    {"S_graph_spectral_lowess",                              (DL_FUNC) &S_graph_spectral_lowess,                              13},
    {"S_graph_spectral_lowess_mat",                          (DL_FUNC) &S_graph_spectral_lowess_mat,                          15},
    {"S_graph_spectral_ma_lowess",                           (DL_FUNC) &S_graph_spectral_ma_lowess,                           13},
    {"S_graph_spectral_smoother",                            (DL_FUNC) &S_graph_spectral_smoother,                            17},
    {"S_graph_spectrum",                                     (DL_FUNC) &S_graph_spectrum,                                      2},
    {"S_graph_spectrum_plus",                                (DL_FUNC) &S_graph_spectrum_plus,                                 3},
    {"S_harmonic_smoother",                                  (DL_FUNC) &S_harmonic_smoother,                                   9},
    {"S_instrumented_gds",                                   (DL_FUNC) &S_instrumented_gds,                                   14},
    {"S_join_graphs",                                        (DL_FUNC) &S_join_graphs,                                         4},
    {"S_loc_const_vertices",                                 (DL_FUNC) &S_loc_const_vertices,                                  3},
    {"S_mabilo",                                             (DL_FUNC) &S_mabilo,                                             11},
    {"S_mabilo_plus",                                        (DL_FUNC) &S_mabilo_plus,                                        13},
    {"S_mabilog",                                            (DL_FUNC) &S_mabilog,                                            14},
    {"S_maelog",                                             (DL_FUNC) &S_maelog,                                             15},
    {"S_magelog",                                            (DL_FUNC) &S_magelog,                                            15},
    {"S_mean_shift_data_smoother",                           (DL_FUNC) &S_mean_shift_data_smoother,                            6},
    {"S_mean_shift_data_smoother_adaptive",                  (DL_FUNC) &S_mean_shift_data_smoother_adaptive,                   8},
    {"S_mean_shift_data_smoother_with_grad_field_averaging", (DL_FUNC) &S_mean_shift_data_smoother_with_grad_field_averaging,  8},
    {"S_nada_graph_spectral_lowess",                         (DL_FUNC) &S_nada_graph_spectral_lowess,                         13},
    {"S_nerve_cx_spectral_filter",                           (DL_FUNC) &S_nerve_cx_spectral_filter,                           12},
    {"S_parameterize_circular_graph",                        (DL_FUNC) &S_parameterize_circular_graph,                         3},
    {"S_perform_harmonic_smoothing",                         (DL_FUNC) &S_perform_harmonic_smoothing,                          6},
    {"S_pgmalo",                                             (DL_FUNC) &S_pgmalo,                                             17},
    {"S_rlaplace",                                           (DL_FUNC) &S_rlaplace,                                            4},
    {"S_set_function_values",                                (DL_FUNC) &S_set_function_values,                                 2},
    {"S_set_weight_scheme",                                  (DL_FUNC) &S_set_weight_scheme,                                   3},
    {"S_shortest_path",                                      (DL_FUNC) &S_shortest_path,                                       3},
    {"S_solve_full_laplacian",                               (DL_FUNC) &S_solve_full_laplacian,                                3},
    {"S_spectral_lowess_graph_smoothing",                    (DL_FUNC) &S_spectral_lowess_graph_smoothing,                    20},
    {"S_ugg_get_path_data",                                  (DL_FUNC) &S_ugg_get_path_data,                                  11},
    {"S_uggmalo",                                            (DL_FUNC) &S_uggmalo,                                            20},
    {"S_uggmalog",                                           (DL_FUNC) &S_uggmalog,                                           19},
    {"S_ulogit",                                             (DL_FUNC) &S_ulogit,                                              8},
    {"S_univariate_gkmm",                                    (DL_FUNC) &S_univariate_gkmm,                                    15},
    {"S_upgmalo",                                            (DL_FUNC) &S_upgmalo,                                            16},
    {"S_wgraph_prune_long_edges",                            (DL_FUNC) &S_wgraph_prune_long_edges,                             5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gflow(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
