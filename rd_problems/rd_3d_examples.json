[
  {
    "file": "R/graphics.R",
    "roxygen_start": 1618,
    "roxygen_end": 1668,
    "examples_start": 1658,
    "examples_end": 1668,
    "guarded": true,
    "matched_tokens": ["plot3D.graph", ""],
    "preview_examples": " 1658: #' \\dontrun{\n 1659: #' if (requireNamespace(\"rgl\", quietly = TRUE)) {\n 1660: #'   old <- options(rgl.useNULL = TRUE); on.exit(options(old), add = TRUE)\n 1661: #'   adj.list <- list(c(2, 3), c(1, 3, 4), c(1, 2), c(2))\n 1662: #'   weight.list <- list(c(1, 1), c(1, 1, 1), c(1, 1), c(1))\n 1663: #'   z.values <- c(0.5, 1.2, 0.8, 1.5)\n 1664: #'   g <- ggraph(adj.list, weight.list)\n 1665: #'   plot3D.graph(g, z.values)\n 1666: #' }\n 1667: #' }\n 1668: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 525,
    "roxygen_end": 567,
    "examples_start": 553,
    "examples_end": 567,
    "guarded": false,
    "matched_tokens": ["plot3D.plain", ""],
    "preview_examples": "  553: #' # Minimal example; runs even without rgl (no plotting).\n  554: #' set.seed(1)\n  555: #' X <- matrix(rnorm(300), ncol = 3)\n  556: #' cl <- sample(1:5, nrow(X), replace = TRUE)\n  557: #' centers <- show.cltrs(X, cl, show.plot = FALSE)\n  558: #'\n  559: #' # If rgl is available, render off-screen safely:\n  560: #' if (requireNamespace(\"rgl\", quietly = TRUE)) {\n  561: #'   old <- options(rgl.useNULL = TRUE); on.exit(options(old), add = TRUE)\n  562: #'   # Suppose you've already drawn points via your helper:\n  563: #'   # plot3D.plain(X)\n  564: #'   show.cltrs(X, cl, cex = 1.1, adj = c(0.5, 1), show.plot = TRUE)",
    "suggestion": "wrap_entire_examples_in_dontrun"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 639,
    "roxygen_end": 690,
    "examples_start": 681,
    "examples_end": 690,
    "guarded": false,
    "matched_tokens": ["plot3D.cltrs", ""],
    "preview_examples": "  681: #' if (requireNamespace(\"rgl\", quietly = TRUE)) {\n  682: #'   old <- options(rgl.useNULL = TRUE); on.exit(options(old), add = TRUE)\n  683: #'   set.seed(123)\n  684: #'   X <- matrix(rnorm(300), ncol = 3)\n  685: #'   cltr <- sample(c(\"A\", \"B\", \"C\"), 100, replace = TRUE)\n  686: #'   plot3D.cltrs(X, cltr, show.cltr.labels = TRUE)\n  687: #' }\n  688: #' @importFrom grDevices hcl.colors rainbow\n  689: #' @export\n  690: #' @export",
    "suggestion": "wrap_entire_examples_in_dontrun"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 919,
    "roxygen_end": 947,
    "examples_start": 936,
    "examples_end": 947,
    "guarded": true,
    "matched_tokens": ["plot3D.cl(", ""],
    "preview_examples": "  936: #' \\dontrun{\n  937: #' X <- matrix(rnorm(300), ncol = 3)\n  938: #' cltr <- sample(1:5, 100, replace = TRUE)\n  939: #'\n  940: #' # Highlight single cluster\n  941: #' plot3D.cl(2, cltr, X)\n  942: #'\n  943: #' # Highlight multiple clusters\n  944: #' plot3D.cl(c(2, 4), cltr, X)\n  945: #' }\n  946: #'\n  947: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 973,
    "roxygen_end": 1004,
    "examples_start": 995,
    "examples_end": 1004,
    "guarded": true,
    "matched_tokens": ["segments3d", "plot3D.plain(", ""],
    "preview_examples": "  995: #' \\dontrun{\n  996: #' X <- matrix(rnorm(300), ncol = 3)\n  997: #' y <- sample(0:1, 100, replace = TRUE)\n  998: #' names(y) <- rownames(X) <- paste0(\"Sample\", 1:100)\n  999: #'\n 1000: #' plot3D.plain(X)\n 1001: #' bin.segments3d(X, y, offset = c(0, 0, 0.1))\n 1002: #' }\n 1003: #'\n 1004: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1040,
    "roxygen_end": 1067,
    "examples_start": 1057,
    "examples_end": 1067,
    "guarded": true,
    "matched_tokens": ["segments3d", "plot3D.plain(", ""],
    "preview_examples": " 1057: #' \\dontrun{\n 1058: #' X <- matrix(rnorm(300), ncol = 3)\n 1059: #' y <- runif(100)\n 1060: #' names(y) <- rownames(X) <- paste0(\"Sample\", 1:100)\n 1061: #'\n 1062: #' plot3D.plain(X)\n 1063: #' cont.segments3d(X, y, offset = c(0, 0, 0.1))\n 1064: #' }\n 1065: #'\n 1066: #' @importFrom grDevices rainbow\n 1067: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1208,
    "roxygen_end": 1229,
    "examples_start": 1220,
    "examples_end": 1229,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", "plot3D.tree(", ""],
    "preview_examples": " 1220: #' \\dontrun{\n 1221: #' X <- matrix(rnorm(30), ncol = 3)\n 1222: #' # Assuming T.edges is computed from a minimal spanning tree algorithm\n 1223: #' T.edges <- matrix(c(1,2, 2,3, 3,4, 4,5), ncol = 2, byrow = TRUE)\n 1224: #'\n 1225: #' plot3D.plain(X)\n 1226: #' plot3D.tree(X, T.edges)\n 1227: #' }\n 1228: #'\n 1229: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1301,
    "roxygen_end": 1324,
    "examples_start": 1316,
    "examples_end": 1324,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", "plot3D.path(", ""],
    "preview_examples": " 1316: #' \\dontrun{\n 1317: #' V <- matrix(rnorm(15), ncol = 3)\n 1318: #' s <- c(1, 3, 2, 5, 4)\n 1319: #'\n 1320: #' plot3D.plain(V)\n 1321: #' plot3D.path(s, V, edge.col = \"red\")\n 1322: #' }\n 1323: #'\n 1324: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1347,
    "roxygen_end": 1376,
    "examples_start": 1365,
    "examples_end": 1376,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", "plot3D.geodesic(", ""],
    "preview_examples": " 1365: #' \\dontrun{\n 1366: #' library(igraph)\n 1367: #' # Create a simple graph\n 1368: #' G <- make_ring(10)\n 1369: #' S.3d <- matrix(rnorm(30), ncol = 3)\n 1370: #'\n 1371: #' plot3D.plain(S.3d)\n 1372: #' plot3D.geodesic(S.3d, 1, 5, G, S.3d)\n 1373: #' }\n 1374: #'\n 1375: #' @importFrom igraph shortest_paths\n 1376: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1457,
    "roxygen_end": 1483,
    "examples_start": 1473,
    "examples_end": 1483,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", ""],
    "preview_examples": " 1473: #' \\dontrun{\n 1474: #' S <- matrix(rnorm(30), ncol = 3)\n 1475: #' rownames(S) <- paste0(\"Point\", 1:10)\n 1476: #' grad.ED <- matrix(rnorm(30) * 0.1, ncol = 3)\n 1477: #' rownames(grad.ED) <- rownames(S)\n 1478: #'\n 1479: #' plot3D.plain(S)\n 1480: #' add.grad.ED.arrows(c(\"Point1\", \"Point5\"), S, grad.ED, C = 2.5)\n 1481: #' }\n 1482: #'\n 1483: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1775,
    "roxygen_end": 1800,
    "examples_start": 1794,
    "examples_end": 1800,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", ""],
    "preview_examples": " 1794: #' \\dontrun{\n 1795: #' # Draw a dashed line from origin to (1, 1, 1)\n 1796: #' plot3D.plain(matrix(c(0,0,0,1,1,1), ncol = 3, byrow = TRUE))\n 1797: #' draw.dashed.line3d(0, 0, 0, 1, 1, 1, col = \"red\", lwd = 3)\n 1798: #' }\n 1799: #'\n 1800: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 1948,
    "roxygen_end": 1973,
    "examples_start": 1968,
    "examples_end": 1973,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", ""],
    "preview_examples": " 1968: #' \\dontrun{\n 1969: #' plot3D.plain(matrix(rnorm(30), ncol = 3))\n 1970: #' draw.axes(delta = 0.5, axes.color = \"black\", half.axes = TRUE)\n 1971: #' }\n 1972: #'\n 1973: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 2036,
    "roxygen_end": 2057,
    "examples_start": 2051,
    "examples_end": 2057,
    "guarded": true,
    "matched_tokens": ["plot3D.plain(", ""],
    "preview_examples": " 2051: #' \\dontrun{\n 2052: #' plot3D.plain(matrix(0, ncol = 3))\n 2053: #' draw.3d.line(c(1, 1, 1), length = 2, col = \"red\")\n 2054: #' draw.3d.line(c(1, 0, 0), length = 1.5, col = \"blue\")\n 2055: #' }\n 2056: #'\n 2057: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/plot_utils.R",
    "roxygen_start": 2085,
    "roxygen_end": 2110,
    "examples_start": 2105,
    "examples_end": 2110,
    "guarded": true,
    "matched_tokens": ["plot3D.diskEmbdg(", ""],
    "preview_examples": " 2105: #' \\dontrun{\n 2106: #' # Assuming ebdg.obj is a properly formatted disk embedding object\n 2107: #' plot3D.diskEmbdg(ebdg.obj, col = \"blue\", vertex.col = \"red\")\n 2108: #' }\n 2109: #'\n 2110: #' @export",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/select_pts.R",
    "roxygen_start": 1,
    "roxygen_end": 42,
    "examples_start": 30,
    "examples_end": 42,
    "guarded": true,
    "matched_tokens": ["rgl::", "plot3d"],
    "preview_examples": "   30: #' \\dontrun{\n   31: #' if (interactive() && requireNamespace(\"rgl\", quietly = TRUE)) {\n   32: #'   set.seed(1)\n   33: #'   X <- matrix(rnorm(300), ncol = 3)\n   34: #'   rgl::open3d()\n   35: #'   rgl::plot3d(X)\n   36: #'   # Return coordinates of selected points:\n   37: #'   coords <- select3D.points()\n   38: #'   # Or return (id, index) pairs:\n   39: #'   # idxmat <- select3D.points(value = FALSE)\n   40: #' }\n   41: #' }",
    "suggestion": "already_guarded"
  },
  {
    "file": "R/select_pts.R",
    "roxygen_start": 233,
    "roxygen_end": 276,
    "examples_start": 261,
    "examples_end": 276,
    "guarded": true,
    "matched_tokens": ["rgl::", "plot3d", "points3d"],
    "preview_examples": "  261: #' \\dontrun{\n  262: #' if (interactive() && requireNamespace(\"rgl\", quietly = TRUE)) {\n  263: #'   set.seed(123)\n  264: #'   n <- 100\n  265: #'   X <- matrix(rnorm(n * 3), ncol = 3)\n  266: #'   Z <- matrix(rpois(n * 10, lambda = 5), ncol = 10)\n  267: #'   colnames(Z) <- paste0(\"Feature\", 1:10)\n  268: #'\n  269: #'   rgl::open3d()\n  270: #'   rgl::plot3d(X, col = \"blue\")\n  271: #'\n  272: #'   sel <- select3D.points.profiles(X, Z, show.profiles = TRUE)",
    "suggestion": "already_guarded"
  }
]
