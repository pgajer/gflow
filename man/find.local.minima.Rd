% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_utils.R
\name{find.local.minima}
\alias{find.local.minima}
\title{Find Local Minima in Distance Sequence}
\usage{
find.local.minima(
  distances,
  k.values = NULL,
  threshold = 0,
  na.rm = FALSE,
  sort.by.prominence = TRUE
)
}
\arguments{
\item{distances}{Numeric vector of distances.}

\item{k.values}{Optional numeric vector of corresponding k values. If NULL,
indices are used.}

\item{threshold}{Numeric value for the minimum prominence of a local minimum
to be considered significant (default: 0, all local minima).}

\item{na.rm}{Logical. Should NA values be handled? If TRUE, NA values are
interpolated; if FALSE (default), function fails if NA values are present.}

\item{sort.by.prominence}{Logical. Should results be sorted by prominence?
If TRUE (default), results are sorted with most prominent first.
If FALSE, results are returned in order of occurrence.}
}
\value{
A data frame with columns:
\item{index}{Integer indices of local minima}
\item{k}{Corresponding k values (or indices if k.values is NULL)}
\item{distance}{Distance values at local minima}
\item{prominence}{Prominence of each local minimum}
}
\description{
Identifies local minima in a sequence of edit distances, which can indicate
stable graph configurations.
}
\details{
A local minimum is defined as a point that is smaller than both its
neighbors. Prominence is calculated as the minimum height the function
must climb to reach a higher value.

If \code{na.rm = TRUE}, NA values are linearly interpolated before
finding minima. Minima at originally NA positions are excluded from results.
}
\examples{
# Create sample data with clear minima
k <- 1:20
dist <- sin(k / 3) + 0.1 * rnorm(20)

# Find local minima
minima <- find.local.minima(dist, k)
print(minima)

# Plot with minima marked
plot(k, dist, type = "b")
points(minima$k, minima$distance, col = "red", pch = 19, cex = 1.5)

# Example with NA handling
dist_na <- dist
dist_na[c(5, 15)] <- NA
minima_na <- find.local.minima(dist_na, k, na.rm = TRUE)

}
