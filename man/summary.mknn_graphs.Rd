% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mknn_graphs.R
\name{summary.mknn_graphs}
\alias{summary.mknn_graphs}
\title{Summary Method for mknn_graphs Objects}
\usage{
\method{summary}{mknn_graphs}(object, ...)
}
\arguments{
\item{object}{An object of class "mknn_graphs", typically output from
\code{create.mknn.graphs}.}

\item{...}{Additional arguments (currently unused).}
}
\value{
Invisibly returns a data frame containing graph statistics with columns:
\describe{
\item{idx}{Index of the k value (1 to number of graphs)}
\item{k}{The k value used for the graph}
\item{n_components}{Number of connected components}
\item{n_edges}{Number of edges in the graph}
\item{mean_degree}{Average vertex degree}
\item{min_degree}{Minimum vertex degree}
\item{max_degree}{Maximum vertex degree}
\item{density}{Graph density (proportion of possible edges present)}
\item{sparsity}{Graph sparsity (1 - density)}
}
}
\description{
Provides a comprehensive summary of mutual k-nearest neighbor graphs created
by \code{create.mknn.graphs}, including structural statistics and connectivity
information for each k value.
}
\details{
The summary provides insights into how graph structure changes with k:
\itemize{
\item \strong{Connected Components}: Indicates graph fragmentation. A value of 1
means the graph is fully connected.
\item \strong{Degree Statistics}: Shows the distribution of vertex connectivity.
Large differences between min and max degree may indicate hub vertices.
\item \strong{Density/Sparsity}: Measures how many of the possible edges are
present. MkNN graphs are typically very sparse.
}

For pruned graphs, the statistics reflect the structure after geometric pruning
has been applied.
}
\examples{
# Create sample data
set.seed(123)
X <- matrix(rnorm(200 * 5), ncol = 5)

# Generate MkNN graphs
mknn_result <- create.mknn.graphs(X, kmin = 5, kmax = 15, compute.full = TRUE)

# Display summary
summary(mknn_result)

# Store summary statistics for plotting
stats <- summary(mknn_result)
plot(stats$k, stats$mean_degree, type = "b",
     xlab = "k", ylab = "Mean Degree",
     main = "Mean Vertex Degree vs k")

}
