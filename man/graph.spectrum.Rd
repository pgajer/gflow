% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_spectrum.R
\name{graph.spectrum}
\alias{graph.spectrum}
\title{Compute Graph Spectrum}
\usage{
graph.spectrum(
  graph,
  nev = NULL,
  use.R = FALSE,
  return.Laplacian = FALSE,
  return.dense = FALSE
)
}
\arguments{
\item{graph}{A list of integer vectors representing the adjacency list of
the graph. Each element of the list corresponds to a vertex, and contains
the indices of vertices adjacent to it.}

\item{nev}{An integer specifying the number of eigenvalues and eigenvectors
to compute. If \code{NULL} (default), computes all eigenvalues except
the trivial zero eigenvalue.}

\item{use.R}{Logical; if \code{TRUE}, uses the R-based implementation
(slower but more portable). If \code{FALSE} (default), uses the C-based
implementation for better performance.}

\item{return.Laplacian}{Logical; if \code{TRUE}, includes the Laplacian
matrix in the return value. Default is \code{FALSE}.}

\item{return.dense}{Logical; if \code{TRUE} and \code{return.Laplacian} is
\code{TRUE}, returns the Laplacian as a dense matrix. If \code{FALSE}
(default), returns it as a sparse matrix. Only applicable when
\code{use.R = FALSE}.}
}
\value{
A list containing:
\item{evalues}{A numeric vector of eigenvalues in descending order.}
\item{evectors}{A matrix of eigenvectors, where each column corresponds
to an eigenvalue.}
\item{laplacian}{(Optional) The Laplacian matrix of the graph, included
only if \code{return.Laplacian = TRUE}.}
}
\description{
Computes the first \code{nev} eigenvalues and eigenvectors of the
Laplacian matrix of a given graph. Supports both R-based and C-based
implementations for performance optimization.
}
\details{
The Laplacian matrix L of a graph is defined as L = D - A, where D is the
degree matrix and A is the adjacency matrix. The eigenvalues and eigenvectors
of the Laplacian matrix provide important spectral properties of the graph.

The function requires the \pkg{igraph} package when \code{use.R = TRUE}, and
the \pkg{Matrix} package when returning sparse Laplacian matrices.

When \code{return.Laplacian = TRUE} on the C path and \pkg{Matrix} is not
installed, the function automatically returns a \strong{dense} Laplacian (sets
\code{return.dense = TRUE}) to avoid a hard dependency on Matrix.
}
\examples{
# Create a simple graph adjacency list
graph <- list(c(2, 3), c(1, 3, 4), c(1, 2, 4), c(2, 3))

# Compute spectrum using R implementation
spec_r <- graph.spectrum(graph, nev = 3, use.R = TRUE)

# Compute spectrum using C implementation
spec_c <- graph.spectrum(graph, nev = 3, use.R = FALSE)

# Get spectrum with Laplacian matrix
spec_lap <- graph.spectrum(graph, return.Laplacian = TRUE)

}
\seealso{
\code{\link{graph.spectral.embedding}}, \code{\link{graph.low.pass.filter}}
}
