% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_utils.R
\name{compute.graph.diameter}
\alias{compute.graph.diameter}
\title{Compute the Diameter of a Weighted Undirected Graph}
\usage{
compute.graph.diameter(adj.list, weight.list)
}
\arguments{
\item{adj.list}{A list where each element i contains the indices of vertices
adjacent to vertex i}

\item{weight.list}{A list where each element i contains the weights of edges
connecting vertex i to its adjacent vertices in adj.list}
}
\value{
A list containing:
\item{diameter}{The diameter of the graph (numeric value, or Inf if disconnected)}
\item{message}{A descriptive message about the diameter}
\item{farthest_vertices}{The pair of vertices that are farthest apart}
\item{diameter_path}{The shortest path between the farthest vertices}
}
\description{
This function calculates the diameter of a weighted undirected graph
represented as adjacency and weight lists. The diameter is the
length of the longest shortest path between any two vertices in the graph.
}
\details{
The function handles several special cases:
\itemize{
\item If the graph has no edges, returns NA as the diameter
\item If the graph is disconnected, returns Inf as the diameter
\item For undirected graphs, edges are only added once to avoid duplication
}
}
\note{
Requires the 'igraph' package to be installed
}
\examples{
# Example with a simple graph
adj.list <- list(c(2,3), c(1,3), c(1,2))
weight.list <- list(c(1,2), c(1,3), c(2,3))
result <- compute.graph.diameter(adj.list, weight.list)
print(result$message)

}
