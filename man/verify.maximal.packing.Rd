% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_maximal_packing.R
\name{verify.maximal.packing}
\alias{verify.maximal.packing}
\title{Verify Maximal Packing Created by create.maximal.packing}
\usage{
verify.maximal.packing(packing.result, verbose = TRUE)
}
\arguments{
\item{packing.result}{The result returned by
\code{\link{create.maximal.packing}}, which must be an object of
class "maximal_packing".}

\item{verbose}{Logical indicating whether to print detailed validation
results. Default is TRUE.}
}
\value{
A logical value: TRUE if the packing is both valid (satisfies the
distance constraint) and maximal (no vertices can be added),
FALSE otherwise.
}
\description{
A convenience function to verify the correctness of a maximal
packing created using the \code{\link{create.maximal.packing}} function.
This function validates both the packing property (minimum separation
distance) and maximality (no vertices can be added).
}
\details{
This function takes the output of \code{create.maximal.packing}
and verifies two key properties:
\enumerate{
\item The packing vertices are all separated by at least
\code{max_packing_radius}
\item The packing is maximal (no more vertices can be added without
violating the distance constraint)
}

\if{html}{\out{<div class="sourceCode">}}\preformatted{When \code{verbose = TRUE}, the function prints:
\\itemize\{
  \\item Graph diameter
  \\item Packing radius used
  \\item Number of vertices in the packing
  \\item Minimum distance between packing vertices
  \\item Maximum coverage distance
  \\item Validity and maximality status
  \\item Any violations or potential additions (if applicable)
\}
}\if{html}{\out{</div>}}
}
\examples{
\dontrun{
# Create a simple cycle graph
n <- 10
adj.list <- lapply(1:n, function(i) {
  c(ifelse(i == 1, n, i - 1), ifelse(i == n, 1, i + 1))
})
weight.list <- lapply(1:n, function(i) c(1, 1))

# Create maximal packing
result <- create.maximal.packing(adj.list, weight.list, grid.size = 3)

# Verify the packing with detailed output
is_valid <- verify.maximal.packing(result, verbose = TRUE)

# Verify quietly
is_valid <- verify.maximal.packing(result, verbose = FALSE)
}

}
\seealso{
\code{\link{create.maximal.packing}},
\code{\link{validate.maximal.packing}}
}
