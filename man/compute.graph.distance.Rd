% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_utils.R
\name{compute.graph.distance}
\alias{compute.graph.distance}
\title{Calculate Shortest Path Distance Between Two Vertices in a Graph}
\usage{
compute.graph.distance(
  star.obj = NULL,
  i,
  j,
  adj.list = NULL,
  edge.lengths = NULL
)
}
\arguments{
\item{star.obj}{Output from generate.star.dataset(). If NULL, adj.list and edge.lengths must be provided.}

\item{i}{Index of source vertex}

\item{j}{Index of target vertex}

\item{adj.list}{List where each element i contains indices of vertices adjacent to vertex i}

\item{edge.lengths}{List where element i contains lengths of edges from vertex i to its adjacent vertices}
}
\value{
Numeric value representing shortest path distance between vertices i and j
}
\description{
Computes the shortest path distance between two vertices in any weighted graph,
using Dijkstra's algorithm.
}
\examples{
\dontrun{
# Using star_obj
star.obj <- generate.star.dataset(n.points = 10, n.arms = 3)
dist <- compute.graph.distance(star.obj = star.obj, i = 1, j = 5)

# Using adjacency list and edge lengths directly
# Assuming adj_list and edge_lengths are defined
dist <- compute.graph.distance(i = 1, j = 5,
                              adj.list = adj_list,
                              edge.lengths = edge_lengths)
}
}
