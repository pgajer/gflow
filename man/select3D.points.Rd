% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_pts.R
\name{select3D.points}
\alias{select3D.points}
\title{Select Points in 3D Space}
\usage{
select3D.points(
  objects = NULL,
  value = TRUE,
  closest = TRUE,
  multiple = TRUE,
  allow_headless = FALSE,
  ...
)
}
\arguments{
\item{objects}{Integer vector of rgl object IDs to consider for selection.
Defaults to all objects in the current scene.}

\item{value}{Logical; if TRUE, return coordinates of selected points.
If FALSE, return object IDs and indices.}

\item{closest}{Logical; if TRUE, pick the closest point when clicking near
but not directly on a point.}

\item{multiple}{Logical or function; if TRUE, allow multiple selections.
If a function, it's called after each selection with the newly added rows;
return FALSE from the function to stop.}

\item{allow_headless}{Logical; if TRUE, bypasses the headless/null-device
check (selection still won't work without a real OpenGL window). Default FALSE.}

\item{...}{Additional parameters passed to \code{rgl::select3d()}.}
}
\value{
If \code{value = TRUE}, a matrix with columns \code{x,y,z} of selected
coordinates. If \code{value = FALSE}, an integer matrix with columns
\code{id,index} identifying selected points.
}
\description{
A modified version of \code{rgl::selectpoints3d()} that provides more stable
interaction for selecting points in 3D space.
}
\details{
This function is \strong{interactive} and requires a real rgl OpenGL device.
On CRAN/rhub or other headless environments (where \code{options(rgl.useNULL)=TRUE})
or in non-interactive sessions (\code{interactive()==FALSE}), the function stops
with an informative error.
}
\examples{
\dontrun{
if (interactive() && requireNamespace("rgl", quietly = TRUE)) {
  set.seed(1)
  X <- matrix(rnorm(300), ncol = 3)
  rgl::open3d()
  rgl::plot3d(X)
  # Return coordinates of selected points:
  coords <- points3D.select()
  # Or return (id, index) pairs:
  # idxmat <- select3D.points(value = FALSE)
}
}
}
