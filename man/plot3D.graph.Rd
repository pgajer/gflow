% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plot3D.graph}
\alias{plot3D.graph}
\title{3D Graph Visualization with Height Values}
\usage{
plot3D.graph(
  x,
  z = NULL,
  layout = "kk",
  conn.points = TRUE,
  use.spheres = TRUE,
  graph.alpha = 0.7,
  z.point.size = 0.5,
  z.color = NULL,
  z.alpha = 1,
  edge.color = "gray70",
  edge.width = 1,
  base.plane = TRUE,
  base.vertex.size = 0.5,
  z.scale = 1,
  show.axes = TRUE,
  vertical.lines = TRUE,
  vertical.line.style = "dashed",
  dash.length = 0.05,
  gap.length = 0.05,
  vertical.line.color = "darkgray",
  vertical.line.alpha = 0.5,
  vertical.line.width = 0.5,
  basins.df = NULL,
  evertex.sphere.radius = 0.2,
  evertex.min.color = "blue",
  evertex.max.color = "red",
  evertex.cex = 1,
  evertex.adj = c(0.5, 0.5),
  evertex.label.offset = 0.3,
  ...
)
}
\arguments{
\item{x}{A ggraph object, a plot result from \code{plot.ggraph()}, or a \code{graph.3d} object.}

\item{z}{Numeric vector of height values for each vertex (required unless x is graph.3d).}

\item{layout}{Layout algorithm name (character) or a numeric matrix of 2D coordinates (n x 2).}

\item{conn.points}{Logical; connect vertices with edges in 3D.}

\item{use.spheres}{Logical; use spheres (TRUE) or points (FALSE) for vertices.}

\item{graph.alpha}{Numeric in \eqn{[0,1]}; transparency for base graph.}

\item{z.point.size}{Numeric; size for z-value points/spheres.}

\item{z.color}{Vector of colors for z values or NULL for automatic coloring.}

\item{z.alpha}{Numeric in \eqn{[0,1]}; transparency for z points.}

\item{edge.color}{Color for edges.}

\item{edge.width}{Numeric; width of edges.}

\item{base.plane}{Logical; show base graph in x-y plane.}

\item{base.vertex.size}{Numeric; size of base plane vertices.}

\item{z.scale}{Numeric; scaling factor for z values.}

\item{show.axes}{Logical; show coordinate axes.}

\item{vertical.lines}{Logical; draw vertical lines from base to z points.}

\item{vertical.line.style}{"solid" or "dashed" for verticals.}

\item{dash.length, }{gap.length Numerics controlling dashed verticals.}

\item{gap.length}{Numeric; length of gaps between dashes when \code{vertical.line.style = "dashed"}.}

\item{vertical.line.color, }{vertical.line.alpha, vertical.line.width Aesthetics for verticals.}

\item{vertical.line.alpha}{Numeric in \eqn{[0,1]}; transparency for vertical guide lines.}

\item{vertical.line.width}{Numeric; line width for vertical guide lines.}

\item{basins.df}{Optional data.frame with columns \code{evertex}, \code{is_max}, and optional \code{label}.}

\item{evertex.sphere.radius}{Numeric; radius for extrema spheres.}

\item{evertex.min.color, }{evertex.max.color Colors for minima/maxima.}

\item{evertex.max.color}{Color used for maxima (extrema) spheres and labels.}

\item{evertex.cex}{Numeric; text size for extrema labels.}

\item{evertex.adj}{Numeric length-2; text adjustment for extrema labels.}

\item{evertex.label.offset}{Numeric; z-offset for extrema labels.}

\item{...}{Reserved for future extensions.}
}
\value{
NULL (invisibly). Opens an rgl device, draws, and closes it on exit.
}
\description{
Visualizes a graph in 3D where vertices are positioned at different heights
based on a function's values. Uses an off-screen rgl device by default so it
works on headless/CI environments.
}
\examples{
\dontrun{
if (requireNamespace("rgl", quietly = TRUE)) {
  old <- options(rgl.useNULL = TRUE); on.exit(options(old), add = TRUE)
  adj.list <- list(c(2, 3), c(1, 3, 4), c(1, 2), c(2))
  weight.list <- list(c(1, 1), c(1, 1, 1), c(1, 1), c(1))
  z.values <- c(0.5, 1.2, 0.8, 1.5)
  g <- ggraph(adj.list, weight.list)
  plot3D.graph(g, z.values)
}
}
}
