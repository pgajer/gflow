% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synthetic_data_utils.R
\name{synthetic.xD.spline}
\alias{synthetic.xD.spline}
\title{Generate a Spline Function}
\usage{
synthetic.xD.spline(X, y = NULL)
}
\arguments{
\item{X}{A numeric matrix containing the coordinates of the points.}

\item{y}{A numeric vector containing the y-coordinates of the points. If not provided,
random values will be generated.}
}
\value{
A spline function that interpolates the given points. The function takes a numeric
value (x-coordinate) as input and returns the interpolated y-coordinate.
}
\description{
This function creates a spline function based on a given set of points. It interpolates these points
using cubic splines, providing a smooth curve through the data.
}
\details{
The function first checks that the lengths of \code{x} and \code{y} are equal and then sorts
these vectors based on the \code{x} values. It then creates a cubic spline function
using the \code{splinefun} function in R, with the method set to "fmm" for flexible
monotone splines. If \code{y} is not provided, random values are generated to create
the spline.
}
\examples{
\dontrun{
# Example usage
x <- seq(0, 10, length.out = 10)
y <- sin(x)  # Example y values
spline.fn <- synthetic.spline(x, y)
point <- 5  # An x-coordinate
value <- spline.fn(point)  # Evaluate the spline function at this point
}
}
