% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_shortest_path.R
\name{shortest.path}
\alias{shortest.path}
\title{Computes Shortest Path Distances for a Selected Set of Vertices of a Graph}
\usage{
shortest.path(graph, edge.lengths, vertices)
}
\arguments{
\item{graph}{A list of numeric vectors. Each vector represents a vertex and contains
the indices of its neighboring vertices.}

\item{edge.lengths}{A list of numeric vectors. Each vector corresponds to a vertex in
\code{graph} and contains the lengths of the edges to its neighbors.}

\item{vertices}{A numeric vector of vertex indices for which to compute the shortest paths.}
}
\value{
A matrix where the element at position \code{(i,j)} represents the shortest path
distance from \code{vertices[i]} to \code{vertices[j]}.
}
\description{
This function computes the shortest paths between specified vertices in a weighted graph.
It serves as an R interface to a C++ implementation of the shortest path algorithm.
}
\details{
The function first performs input validation, ensuring that \code{graph} and
\code{edge.lengths} are properly formatted and consistent. It then converts the
graph to 0-based indexing (as required by the C++ function) before calling
the C++ implementation.
}
\note{
The C++ function assumes 0-based indexing, but this R function accepts 1-based
index inputs as is standard in R. The conversion is handled internally.
}
\examples{
graph <- list(c(2,3), c(1,3,4), c(1,2,4), c(2,3))
edge.lengths <- list(c(1,4), c(1,2,5), c(4,2,1), c(5,1))
vertices <- c(1,3,4)
result <- shortest.path(graph, edge.lengths, vertices)
print(result)

}
