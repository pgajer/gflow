% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_generators.R
\name{generate.star.dataset}
\alias{generate.star.dataset}
\title{Generate Synthetic Dataset on a Star-Shaped Geometric Space}
\usage{
generate.star.dataset(
  n.points,
  n.arms = 3,
  min.n.pts.within.arm = 3,
  min.arm.length = 0.5,
  max.arm.length = 2,
  arm.lengths = NULL,
  dim = 2,
  fn = "exp",
  fn.center = NULL,
  fn.scale = 1,
  noise = "norm",
  noise.sd = 0.1,
  rand.directions = FALSE,
  eps = 0.05
)
}
\arguments{
\item{n.points}{Integer. Total number of points to generate in the star graph, including
the center point and arm endpoints. Must be greater than n.arms * min.n.pts.within.arm}

\item{n.arms}{Integer. Number of arms in the star graph. Must be at least 2}

\item{min.n.pts.within.arm}{Integer. Minimum number of interior points to place within each arm}

\item{min.arm.length}{Numeric. Minimum length for graph arms. Must be positive}

\item{max.arm.length}{Numeric. Maximum length for graph arms. Must be greater than min.arm.length}

\item{arm.lengths}{Numeric vector or NULL. If provided, must be of length n.arms with values
between min.arm.length and max.arm.length. If NULL, lengths are randomly sampled
from a uniform distribution}

\item{dim}{Integer. Dimension of the Euclidean space (>= 2) in which the star graph is embedded}

\item{fn}{Character. Type of smooth function to use:
"exp" - Gaussian function exp(-((x - center)^2)/(2 * scale^2))
"poly" - Cubic polynomial peaking at specified center
"sin" - Damped sinusoidal function
"wave" - Mexican hat wavelet}

\item{fn.center}{Controls the center point of the smooth function. Can be specified in three ways:
1. NULL: Centers the function at the origin (graph center)
2. Single number: Can be either:
- An integer: Uses the coordinates of the vertex at that index
- A non-integer: Places the center along the first arm at a fractional
distance (e.g., 1.3 places it 30\% along the first arm)
3. Numeric vector of length dim: Uses these exact coordinates as the center
Default is NULL, centering the function at the origin.}

\item{fn.scale}{Numeric. Scale parameter controlling the spread of the function.
For "exp": standard deviation of the Gaussian
For "poly": controls the rate of polynomial decay
For "sin": controls the frequency and damping rate
For "wave": controls the width of the wavelet}

\item{noise}{Character. Type of noise to add:
"norm" - Normal distribution
"laplace" - Laplace distribution
"t" - Student's t-distribution with 3 degrees of freedom
"unif" - Uniform distribution}

\item{noise.sd}{Numeric. Scale parameter for the noise distribution}

\item{rand.directions}{Logical. If TRUE, generates random directions for the arms.
If FALSE and dim=2, uses evenly spaced points on a circle. Default is FALSE.}

\item{eps}{Numeric. Minimum relative distance between points within arms (0 < eps < 1)}
}
\value{
List containing:
\item{points}{Matrix of vertex coordinates, where rows correspond to vertices}
\item{adj.list}{List of adjacency lists defining the graph structure}
\item{edge.lengths}{List of edge lengths corresponding to adj.list}
\item{y.smooth}{Vector of smooth function values at the vertices}
\item{y.noisy}{Vector of noisy observations (y.smooth + noise)}
\item{arm.lengths}{Vector of actual arm lengths used}
\item{center}{Coordinates of the star center (origin)}
\item{endpoints}{Matrix of arm endpoints coordinates}
\item{directions}{Matrix of unit vectors corresponding to the directions of the arms}
\item{partition}{An integer vector showing the number of elements in each arm}
\item{fn.center}{An index of vector of the center of the y.smooth}
}
\description{
Creates a synthetic dataset consisting of three main components:
\enumerate{
\item A geometric realization of a star graph embedded in a d-dimensional Euclidean space
\item A smooth function defined on the vertices of this geometric realization
\item Noisy observations obtained by adding random noise to the smooth function values
}

The star graph consists of n.arms line segments (arms) meeting at a central point,
with each arm having potentially different lengths. Points are distributed along
these arms to create the graph vertices.
}
\examples{
\dontrun{
# Generate a 2D star graph with 5 arms and exponential function centered at origin
result <- generate.star.dataset(
  n.points = 20,
  n.arms = 5,
  min.n.pts.within.arm = 3,
  min.arm.length = 1,
  max.arm.length = 3,
  dim = 2,
  fn = "exp",
  fn.center = c(0, 0),
  fn.scale = 1,
  noise = "norm",
  noise.sd = 0.1
)
}
}
