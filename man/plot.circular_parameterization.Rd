% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameterize_circular_graph.R
\name{plot.circular_parameterization}
\alias{plot.circular_parameterization}
\title{Plot Method for circular_parameterization Objects}
\usage{
\method{plot}{circular_parameterization}(
  x,
  adj.list = NULL,
  vertex.labels = seq_len(length(x$angles)),
  vertex.cex = 1.5,
  label.cex = 0.8,
  edge.col = "gray70",
  vertex.col = "black",
  ...
)
}
\arguments{
\item{x}{An object of class \code{"circular_parameterization"} as returned by
\code{\link{parameterize.circular.graph}}.}

\item{adj.list}{Optional adjacency list to draw edges. If provided, edges will
be drawn between connected vertices.}

\item{vertex.labels}{Labels for vertices. Default is \code{seq_len(n)} where
\code{n} is the number of vertices. Use \code{NA} to suppress labels.}

\item{vertex.cex}{Character expansion factor for vertex points. Default is 1.5.}

\item{label.cex}{Character expansion factor for vertex labels. Default is 0.8.}

\item{edge.col}{Color for edges. Default is "gray70".}

\item{vertex.col}{Color for vertex points. Default is "black".}

\item{...}{Further graphical parameters passed to \code{\link{plot}}.}
}
\value{
Invisibly returns the input object \code{x}.
}
\description{
Creates a visualization of vertices positioned on a circle according to their
computed angles.
}
\examples{
# Create example graph
n <- 8
adj.list <- lapply(seq_len(n), function(i) {
  c(if (i == n) 1 else i + 1, if (i == 1) n else i - 1)
})
weight.list <- lapply(adj.list, function(adj) rep(1.0, length(adj)))
result <- parameterize.circular.graph(adj.list, weight.list)

# Basic plot
plot(result)

# Plot with edges
plot(result, adj.list = adj.list,
     main = "Circular Graph Visualization")

}
