% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gflow_cx_utils.R
\name{apply.harmonic.extension}
\alias{apply.harmonic.extension}
\title{Apply Harmonic Extension to Local Subgraph}
\usage{
apply.harmonic.extension(
  subgraph,
  method = c("weighted_mean", "harmonic_iterative", "harmonic_eigen",
    "biharmonic_harmonic", "boundary_smoothed"),
  max_iterations = 100,
  tolerance = 1e-06,
  sigma = 1,
  record_iterations = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{subgraph}{A subgraph object created by \code{extract.extrema.subgraphs}}

\item{method}{Character string specifying the smoothing method:
\describe{
\item{"weighted_mean"}{Weighted mean hop disk extension}
\item{"harmonic_iterative"}{Iterative harmonic extension}
\item{"harmonic_eigen"}{Eigen-based harmonic extension}
\item{"biharmonic_harmonic"}{Hybrid biharmonic-harmonic extension}
\item{"boundary_smoothed"}{Boundary smoothed harmonic extension}
}}

\item{max_iterations}{Integer maximum number of iterations for iterative methods (default: 100)}

\item{tolerance}{Numeric convergence tolerance (default: 1e-6)}

\item{sigma}{Numeric parameter for weighted mean method (default: 1.0)}

\item{record_iterations}{Logical whether to record intermediate states (default: TRUE)}

\item{verbose}{Logical whether to print progress information (default: FALSE)}
}
\value{
A list containing:
\describe{
\item{original}{Original function values}
\item{smoothed}{Smoothed function values after harmonic extension}
\item{iterations}{List of function values at each iteration (if \code{record_iterations = TRUE})}
\item{method}{Method used for smoothing}
\item{extremum_info}{Information about the extremum}
\item{convergence_info}{List with convergence information:
\itemize{
\item \code{iterations_performed}: Number of iterations
\item \code{final_change}: Maximum change in final iteration
\item \code{converged}: Whether convergence was achieved
}}
}
}
\description{
Applies a specified harmonic extension method to a local subgraph around an extremum.
This function interfaces with C++ implementations of various harmonic extension algorithms.
}
\examples{
\dontrun{
# Assumes subgraph was created by extract.extrema.subgraphs
result <- apply.harmonic.extension(subgraph, method = "harmonic_eigen")
}

}
