% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bias_utils.R
\name{get.random.forest.MAB.xD}
\alias{get.random.forest.MAB.xD}
\title{Estimate Mean Absolute Bias (MAB) of Random Forest Model for Multi-dimensional Data}
\usage{
get.random.forest.MAB.xD(X, y, yt, ntree = 500)
}
\arguments{
\item{X}{A matrix or data frame of predictor variables (dimension > 1).}

\item{y}{A vector of response values (numeric for regression, factor for classification).}

\item{yt}{A vector of true response values for evaluation.}

\item{ntree}{Number of trees to grow in the random forest (default = 500).}
}
\value{
A list containing:
\describe{
\item{MAB}{Mean Absolute Bias calculated on the dataset}
\item{RMSE}{Root Mean Square Error}
\item{predictions}{Predictions made by the random forest model}
\item{residuals}{Absolute residuals}
\item{model}{The fitted random forest model object}
\item{parameters}{List containing ntree value used}
}
}
\description{
Fits a Random Forest model to multi-dimensional data and evaluates its performance
by computing the Mean Absolute Bias on the same data (in-sample evaluation).
}
\details{
For classification tasks (when y is a factor), the function returns
predicted probabilities for the second class level. For regression tasks,
it returns the predicted values directly. Note that this function evaluates
the model on the training data (in-sample).
}
\examples{
\dontrun{
# Regression example
set.seed(123)
n <- 100
X <- matrix(rnorm(n * 3), ncol = 3)
y <- X[,1] + X[,2]^2 + rnorm(n, sd = 0.1)
yt <- X[,1] + X[,2]^2  # True values

result <- get.random.forest.MAB.xD(X, y, yt, ntree = 500)
print(result$MAB)

# Classification example
y.class <- factor(ifelse(y > median(y), "high", "low"))
yt.prob <- plogis(yt - median(yt))  # True probabilities
result.class <- get.random.forest.MAB.xD(X, y.class, yt.prob, ntree = 500)
print(result.class$MAB)
}

}
