% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synthetic_data_utils.R
\name{get.gaussian.mixture}
\alias{get.gaussian.mixture}
\title{Generate Synthetic Data from a Mixture of Gaussians}
\usage{
get.gaussian.mixture(
  n.points = 100,
  n.components = 5,
  x.range = c(0, 1),
  y.range = c(-1, 1),
  x.knots.strategy = "uniform",
  jitter.fraction = 0.25,
  edge.buffer = 0.1,
  sigma = 1.5,
  xmin.factor = 3,
  xmax.factor = 7,
  x.offset.factor = 2,
  sd.strategy = "fixed",
  sd.knot = 0.1,
  sd.factor = 0.5,
  sd.random.range = c(0.5, 2),
  custom.sd.knots = NULL,
  y.strategy = "mixed",
  y.min.fraction = 0.1,
  custom.y.knots = NULL,
  noise.fraction = 0.15,
  error.distribution = "norm",
  seed = NULL,
  verbose = FALSE
)
}
\arguments{
\item{n.points}{Integer specifying the number of data points to generate}

\item{n.components}{Integer specifying the number of Gaussian components}

\item{x.range}{Numeric vector c(min, max) specifying the range for x values.
Ignored when x.knots.strategy = "offset"}

\item{y.range}{Numeric vector c(min, max) specifying the range for y values}

\item{x.knots.strategy}{Character string specifying how to position components.
Must be one of:
\itemize{
\item "uniform": equally spaced components
\item "random": uniformly random positions
\item "jittered": perturbed uniform spacing
\item "offset": sequential spacing with sigma-relative gaps
}}

\item{jitter.fraction}{Numeric between 0 and 0.5 specifying maximum jitter as
fraction of local spacing when x.knots.strategy = "jittered"}

\item{edge.buffer}{Numeric between 0 and 0.5 specifying minimum distance from
range edges as fraction of total range (not used for "offset" strategy)}

\item{sigma}{Numeric specifying the scale parameter when using offset strategy.
Also informs the error distribution scale. Default is 1.5}

\item{xmin.factor}{Numeric specifying minimum spacing between components in
units of sigma when x.knots.strategy = "offset". Default is 3}

\item{xmax.factor}{Numeric specifying maximum spacing between components in
units of sigma when x.knots.strategy = "offset". Default is 7}

\item{x.offset.factor}{Numeric factor to extend x-range beyond components
when x.knots.strategy = "offset". Default is 2}

\item{sd.strategy}{Character string specifying how to generate component SDs.
Must be one of:
\itemize{
\item "fixed": constant SD for all components
\item "adaptive": SD based on distance to neighbors
\item "stoch.adaptive": randomized adaptive SDs
\item "custom": user-specified SD values
}}

\item{sd.knot}{Numeric specifying the SD value when sd.strategy = "fixed"}

\item{sd.factor}{Numeric between 0 and 1 specifying the fraction of neighbor
distance to use for SD in adaptive strategies}

\item{sd.random.range}{Numeric vector c(min, max) specifying multipliers for
random SD generation in "stoch.adaptive" strategy}

\item{custom.sd.knots}{Optional numeric vector of length n.components
specifying custom SD values}

\item{y.strategy}{Character string specifying how to generate component amplitudes.
Must be one of:
\itemize{
\item "mixed": mix of positive and negative amplitudes
\item "positive": only positive amplitudes
\item "custom": user-specified amplitudes
}}

\item{y.min.fraction}{Numeric between 0 and 1 specifying minimum absolute
amplitude as fraction of y range}

\item{custom.y.knots}{Optional numeric vector of length n.components
specifying custom amplitude values}

\item{noise.fraction}{Numeric specifying noise standard deviation as fraction
of y range}

\item{error.distribution}{Character string specifying noise distribution.
Must be one of:
\itemize{
\item "norm": Gaussian noise
\item "laplace": Laplace noise
}}

\item{seed}{Optional integer for random number generation}

\item{verbose}{Logical indicating whether to print generation details}
}
\value{
A list containing:
\describe{
\item{x}{Numeric vector of x coordinates}
\item{y}{Numeric vector of noisy y values}
\item{y.true}{Numeric vector of true y values (without noise)}
\item{x.knots}{Numeric vector of component x positions}
\item{y.knots}{Numeric vector of component amplitudes}
\item{sd.knots}{Numeric vector of component standard deviations}
\item{parameters}{List of all input parameters used}
}
}
\description{
Creates synthetic data by generating a mixture of Gaussian components with
flexible positioning, scaling, and noise characteristics. This function provides
extensive control over the component placement, standard deviations, amplitudes,
and noise properties, making it suitable for testing and benchmarking smoothing
methods. Supports both absolute and sigma-relative positioning strategies.
}
\section{Positioning Strategies}{

The function supports four strategies for positioning components along the x-axis:

\describe{
\item{\strong{uniform}}{Components are equally spaced within x.range with edge buffers}
\item{\strong{random}}{Components are randomly positioned within x.range with edge buffers}
\item{\strong{jittered}}{Components start on a uniform grid then are randomly perturbed.
The jitter.fraction parameter controls the maximum displacement while maintaining order}
\item{\strong{offset}}{Components are sequentially positioned with random gaps between
xmin.factor\emph{sigma and xmax.factor}sigma. The first component starts at 0, and the
x-range is automatically determined}
}
}

\section{Jittering Details}{

When using jittered positioning, components maintain their relative order:
\itemize{
\item Interior components can move up to jitter.fraction times the distance
to their neighbors
\item Edge components have full freedom toward the range boundaries
\item jitter.fraction must be \eqn{\le 0.5} to prevent crossing
}
}

\examples{
# Basic usage with default parameters
data <- get.gaussian.mixture()

# Custom mixture with specific parameters
data <- get.gaussian.mixture(
  n.points = 200,
  n.components = 3,
  x.knots.strategy = "jittered",
  sd.strategy = "stoch.adaptive",
  y.strategy = "mixed",
  noise.fraction = 0.1
)

# Using sigma-scaled offset positioning
data <- get.gaussian.mixture(
  n.components = 4,
  x.knots.strategy = "offset",
  sigma = 2,
  xmin.factor = 2,
  xmax.factor = 5,
  sd.strategy = "adaptive"
)

# Example with fixed standard deviations and custom amplitudes
data <- get.gaussian.mixture(
  n.components = 2,
  x.knots.strategy = "uniform",
  sd.strategy = "custom",
  custom.sd.knots = c(0.05, 0.15),
  y.strategy = "custom",
  custom.y.knots = c(1, -0.5)
)

}
