% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synthetic_data_utils.R
\name{normalize.and.inv.logit.fn}
\alias{normalize.and.inv.logit.fn}
\title{Transform Continuous Values to Probabilities via Normalization and Logistic Function}
\usage{
normalize.and.inv.logit.fn(y, y.min = -3, y.max = 3)
}
\arguments{
\item{y}{Numeric vector of continuous values to be transformed. Must contain more than
one unique finite value.}

\item{y.min}{Numeric scalar indicating the minimum value for the normalization range.
Must be less than y.max. Default is -3.}

\item{y.max}{Numeric scalar indicating the maximum value for the normalization range.
Must be greater than y.min. Default is 3.}
}
\value{
A numeric vector of the same length as y, containing probabilities in the
range (0,1).
}
\description{
This function converts continuous-valued input into probabilities through a two-step process:
\enumerate{
\item Min-max normalization to a specified range
\item Logistic transformation to convert normalized values to probabilities
}
}
\details{
The transformation is useful for converting arbitrary continuous values (like smoothed
data or similarity scores) into valid probabilities that can be used for binary sampling
or probabilistic modeling.

The function first applies min-max normalization to scale the input values to the
range \code{[y.min, y.max]}. It then applies the inverse logit (logistic) function
\code{1/(1 + exp(-x))} to convert these normalized values to probabilities.

The default range \code{[-3, 3]} is chosen because these values, when transformed by the
logistic function, result in probabilities of approximately 0.05 and 0.95
respectively, providing a good spread of probability values while avoiding
extreme probabilities too close to 0 or 1.
}
\section{Throws an error if}{

\itemize{
\item Input contains non-finite values
\item Input contains fewer than two unique values
\item y.min is greater than or equal to y.max
}
}

\examples{
# Transform smoothed values into probabilities
y.smooth <- c(-1, 0, 0.5, 1, 2)
probs <- normalize.and.inv.logit.fn(y.smooth)

# Use custom range for normalization
probs.wide <- normalize.and.inv.logit.fn(y.smooth, y.min = -5, y.max = 5)

}
\seealso{
\code{\link{rbinom}} for generating binary samples from the resulting probabilities
}
