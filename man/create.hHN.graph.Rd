% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hHN_graphs.R
\name{create.hHN.graph}
\alias{create.hHN.graph}
\title{Create a k-hop Neighborhood (hHN) Graph}
\usage{
create.hHN.graph(graph, edge.lengths, h)
}
\arguments{
\item{graph}{A list of numeric vectors representing the adjacency list of
the input graph. Each element \code{graph[[i]]} contains the indices of
vertices adjacent to vertex i. Note: Uses 1-based indexing as standard in R.}

\item{edge.lengths}{A list of numeric vectors representing the edge weights
of the input graph. \code{edge.lengths[[i]][j]} is the weight of the edge
from vertex i to its j-th neighbor in \code{graph[[i]]}.}

\item{h}{An integer specifying the maximum number of hops to consider for
neighborhood connectivity. Must be greater than or equal to 1.}
}
\value{
A list containing two elements:
\describe{
\item{adj_list}{A list of integer vectors representing the adjacency list
of the hHN graph. Indices use 1-based indexing.}
\item{dist_list}{A list of numeric vectors representing the edge weights
(shortest path distances) of the hHN graph.}
}

The time complexity is O(n * (m + n log n)), where n is the number of
vertices and m is the number of edges in the original graph.
}
\description{
Generates a k-hop neighborhood graph from an input graph represented by an
adjacency list and corresponding edge lengths. The k-hop neighborhood of a
vertex includes all vertices reachable within at most k hops, with edges
representing the shortest paths between vertices.
}
\examples{
# Create a simple 4-vertex graph
graph <- list(
  c(2, 3),      # Vertex 1 connects to vertices 2 and 3
  c(1, 3, 4),   # Vertex 2 connects to vertices 1, 3, and 4
  c(1, 2, 4),   # Vertex 3 connects to vertices 1, 2, and 4
  c(2, 3)       # Vertex 4 connects to vertices 2 and 3
)

edge.lengths <- list(
  c(1, 2),      # Edge weights from vertex 1
  c(1, 1, 3),   # Edge weights from vertex 2
  c(2, 1, 1),   # Edge weights from vertex 3
  c(3, 1)       # Edge weights from vertex 4
)

# Generate the 2-hop neighborhood graph
h <- 2
khn.graph <- create.hHN.graph(graph, edge.lengths, h)

# Access the results
khn.graph$adj_list   # Adjacency list of the hHN graph
khn.graph$dist_list  # Shortest path distances in the hHN graph

}
\seealso{
\code{\link{bbmwd.over.hHN.graphs}} for computing BBMWD over hHN graphs
}
