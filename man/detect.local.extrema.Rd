% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_extrema.R
\name{detect.local.extrema}
\alias{detect.local.extrema}
\title{Detect Local Extrema in a Graph}
\usage{
detect.local.extrema(
  adj.list,
  weight.list,
  y,
  max.radius,
  min.neighborhood.size,
  detect.maxima = TRUE,
  custom.prefix = NULL
)
}
\arguments{
\item{adj.list}{A list where each element contains integer indices of vertices
adjacent to the corresponding vertex. Must have length equal to the number
of vertices in the graph.}

\item{weight.list}{A list where each element contains numeric weights of edges
from the corresponding vertex. \code{weight.list[[i]][j]} is the weight of
the edge from vertex \code{i} to vertex \code{adj.list[[i]][j]}.}

\item{y}{A numeric vector of function values at each vertex. Must have the
same length as \code{adj.list}.}

\item{max.radius}{Positive numeric value specifying the maximum radius for
neighborhood search.}

\item{min.neighborhood.size}{Positive integer specifying the minimum number
of vertices required in a neighborhood for a vertex to be considered an extremum.}

\item{detect.maxima}{Logical; if \code{TRUE} (default), detect local maxima;
if \code{FALSE}, detect local minima.}

\item{custom.prefix}{Character string to use as prefix for extrema labels.
If \code{NULL} (default), uses "M" for maxima and "m" for minima.}
}
\value{
An object of class \code{"local_extrema"}, which is a list containing:
\describe{
\item{vertices}{Integer vector of vertex indices identified as extrema}
\item{values}{Numeric vector of function values at the extrema}
\item{radii}{Numeric vector of neighborhood radii where extremum property holds}
\item{neighborhood_sizes}{Integer vector of the number of vertices in each extremum's neighborhood}
\item{is_maxima}{Logical vector indicating whether each extremum is a maximum (\code{TRUE}) or minimum (\code{FALSE})}
\item{type}{Character vector with values "Maximum" or "Minimum" for each extremum}
\item{labels}{Character vector of labels for each extremum (e.g., "M1", "M2" for maxima)}
}
}
\description{
Identifies local maxima or minima in a graph based on vertex function values.
A vertex is considered a local extremum if it has the highest (for maxima) or
lowest (for minima) function value within a neighborhood of specified radius,
and the neighborhood contains at least a minimum number of vertices.
}
\details{
The algorithm uses a graph-based approach to identify local extrema by examining
neighborhoods defined by graph distance. For each vertex, it searches within
increasing radii up to \code{max.radius} to find a neighborhood where the vertex
has the extreme value among all vertices in that neighborhood.

The implementation uses a C++ backend for computational efficiency, particularly
beneficial for large graphs.
}
\examples{
# Create a simple chain graph
adj.list <- list(c(2), c(1,3), c(2,4), c(3,5), c(4))
weight.list <- list(c(1), c(1,1), c(1,1), c(1,1), c(1))
y <- c(1, 3, 2, 5, 1)  # Function values with peaks at vertices 2 and 4

# Detect maxima
maxima <- detect.local.extrema(adj.list, weight.list, y,
                               max.radius = 2,
                               min.neighborhood.size = 2)
print(maxima$vertices)  # Should identify vertices 2 and 4

# Detect minima
minima <- detect.local.extrema(adj.list, weight.list, y,
                               max.radius = 2,
                               min.neighborhood.size = 2,
                               detect.maxima = FALSE)
print(minima$vertices)  # Should identify vertices 1, 3, and 5

}
\seealso{
\code{\link{summary.local_extrema}} for summarizing results,
\code{\link{plot.local_extrema}} for visualization
}
