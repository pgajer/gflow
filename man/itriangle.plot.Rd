% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{itriangle.plot}
\alias{itriangle.plot}
\title{itriangle.plot}
\usage{
itriangle.plot(coords, v = NULL, params)
}
\arguments{
\item{coords}{A matrix of vertex coordinates. Each row should contain the x
and y coordinates of a vertex.}

\item{v}{An optional vector of vertex indices to be plotted. If NULL, all
vertices will be plotted.}

\item{params}{A list of plotting parameters, typically obtained from the
igraph \code{params} function.}
}
\description{
Custom plot function to draw vertices as inverted triangles in an igraph plot
}
\details{
This function is used to plot vertices as inverted equilateral triangles in an igraph
graph. The triangles are sized to have approximately the same area as circles
of the same vertex size. It is intended to be used with the igraph \code{add_shape}
function to add the "itriangle" (inverted triangle) shape to graph vertices.

The function adjusts the size of the triangles to match the area of
circles with the same vertex size. This ensures visual consistency
in the plot. The function also handles vertex colors, frame colors,
and frame widths.
}
\examples{
\dontrun{
  library(igraph)

  # Define the inverted triangle plot function
  itriangle.plot <- function(coords, v = NULL, params) {
      vertex.color <- params("vertex", "color")
      if (length(vertex.color) != 1 && !is.null(v)) {
          vertex.color <- vertex.color\[v\]
      }
      vertex.frame.color <- params("vertex", "frame.color")
      if (length(vertex.frame.color) != 1 && !is.null(v)) {
          vertex.frame.color <- vertex.frame.color\[v\]
      }
      vertex.frame.width <- params("vertex", "frame.width")
      if (length(vertex.frame.width) != 1 && !is.null(v)) {
          vertex.frame.width <- vertex.frame.width\[v\]
      }
      vertex.size <- 1/200 * params("vertex", "size")
      if (length(vertex.size) != 1 && !is.null(v)) {
          vertex.size <- vertex.size\[v\]
      }
      vertex.size <- rep(vertex.size, length.out = nrow(coords))

      # Adjust the size for the inverted triangle
      side.length <- sqrt(4 * pi / sqrt(3)) * vertex.size / 2

      vertex.frame.color\[vertex.frame.width <= 0\] <- NA
      vertex.frame.width\[vertex.frame.width <= 0\] <- 1

      for (i in 1:nrow(coords)) {
          x <- coords\[i, 1\]
          y <- coords\[i, 2\]
          size <- side.length\[i\]
          polygon(x + size * c(cos(3*pi/2), cos(5*pi/6), cos(pi/6)),
                  y + size * c(sin(3*pi/2), sin(5*pi/6), sin(pi/6)),
                  col = vertex.color\[i\],
                  border = vertex.frame.color\[i\],
                  lwd = vertex.frame.width\[i\])
      }
  }

  # Add the inverted triangle shape to igraph
  add_shape("itriangle", clip = shapes(shape = "circle")$clip,
            plot = itriangle.plot)

  # Example graph
  g <- make_ring(10)
  V(g)$shape <- rep(c("circle", "itriangle"), length.out = vcount(g))
  plot(g, vertex.size = 15, vertex.color = "skyblue")
}

}
