% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gflow_cx_utils.R
\name{extract.extrema.subgraphs}
\alias{extract.extrema.subgraphs}
\title{Extract Local Subgraphs Around Extrema}
\usage{
extract.extrema.subgraphs(
  adj.list,
  weight.list,
  y,
  predictions,
  extrema.df,
  hop.offset = 2,
  min.hop.idx = 0,
  max.hop.idx = Inf
)
}
\arguments{
\item{adj.list}{A list where each element contains the neighbors of the corresponding vertex.
Must be a valid adjacency list representation of an undirected graph.}

\item{weight.list}{A list of numeric vectors where each element contains the edge weights
corresponding to the neighbors in \code{adj.list}. Must have the same structure as
\code{adj.list}.}

\item{y}{Numeric vector of function values on vertices. Length must equal the number of
vertices in the graph.}

\item{predictions}{Numeric vector of smoothed predictions (e.g., from spectral filtering).
Must have the same length as \code{y}.}

\item{extrema.df}{Data frame containing extrema information with required columns:
\itemize{
\item \code{vertex}: Integer vertex index
\item \code{hop_idx}: Integer hop radius of the extremum
\item \code{is_max}: Logical indicating if extremum is a maximum
\item \code{label}: Character label for the extremum
\item \code{fn_value}: Numeric function value at the extremum
}}

\item{hop.offset}{Integer specifying additional hop distance to include beyond the
extremum's hop radius (default: 2). Must be non-negative.}

\item{min.hop.idx}{Integer specifying minimum hop index for extrema to process
(default: 0). Must be non-negative.}

\item{max.hop.idx}{Integer or \code{Inf} specifying maximum hop index for extrema to
process (default: \code{Inf}).}
}
\value{
A list where each element corresponds to a processed extremum and contains:
\describe{
\item{adj_list}{Adjacency list of the subgraph (1-indexed)}
\item{weight_list}{Weight list of the subgraph}
\item{y}{Original function values for subgraph vertices}
\item{predictions}{Predicted function values for subgraph vertices}
\item{extremum_info}{Data frame row containing information about the central extremum,
with vertex index mapped to subgraph numbering}
\item{region_vertices}{Integer vector of subgraph indices for vertices within the
extremum's hop radius}
\item{boundary_vertices}{Integer vector of subgraph indices for vertices at exactly
hop_idx+1 distance}
\item{boundary_values}{Named numeric vector of y values at boundary vertices,
names are subgraph indices}
\item{vertex_mapping}{List with two components:
\itemize{
\item \code{orig.to.new}: Named integer vector mapping original to subgraph indices
\item \code{new.to.orig}: Integer vector mapping subgraph to original indices
}}
\item{hop_distances}{Numeric vector of hop distances from center for all subgraph vertices}
\item{extrema_df}{Data frame of all extrema within the subgraph with vertex indices
mapped to subgraph numbering}
\item{orig_region_vertices}{Integer vector of original indices for region vertices}
\item{orig_boundary_vertices}{Integer vector of original indices for boundary vertices}
\item{orig_boundary_values}{Named numeric vector of y values with original vertex indices}
}
}
\description{
Creates a list of subgraphs centered around each local extremum in the input data.
Each subgraph includes vertices within the hop radius of the extremum plus an
additional offset.
}
\examples{
\dontrun{
# Create a simple graph
adj_list <- list(c(2, 3), c(1, 3, 4), c(1, 2, 4), c(2, 3))
weight_list <- list(c(1, 1), c(1, 1, 1), c(1, 1, 1), c(1, 1))
y <- c(1, 2, 3, 1)
predictions <- c(1.1, 2.1, 2.9, 1.1)

# Create extrema data frame
extrema_df <- data.frame(
  vertex = 3,
  hop_idx = 1,
  is_max = TRUE,
  label = "Max1",
  fn_value = 3,
  stringsAsFactors = FALSE
)

# Extract subgraph
result <- extract.extrema.subgraphs(
  adj_list, weight_list, y, predictions, extrema_df, hop.offset = 1
)
}
}
