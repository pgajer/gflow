% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_gradient_flow_basins.R
\name{compute.graph.gradient.flow}
\alias{compute.graph.gradient.flow}
\title{Compute Gradient Flow Information for Vertices in a Graph}
\usage{
compute.graph.gradient.flow(
  adj.list,
  weight.list = NULL,
  y,
  lmax.list,
  lmin.list,
  verbose = FALSE
)
}
\arguments{
\item{adj.list}{List where \code{adj.list[[i]]} contains indices of vertices
adjacent to vertex i. Must be a valid adjacency list representation.}

\item{weight.list}{List where \code{weight.list[[i]]} contains positive weights
of edges from vertex i to corresponding vertices in \code{adj.list[[i]]}.
If \code{NULL}, uniform weights of 1 are used.}

\item{y}{Numeric vector of values at each vertex. Must have the same length
as \code{adj.list}.}

\item{lmax.list}{List of local maxima information. See \code{\link{lmax.basins}}
for format details.}

\item{lmin.list}{List of local minima information. See \code{\link{lmin.basins}}
for format details.}

\item{verbose}{Logical; if \code{TRUE}, prints progress messages during
computation. Default is \code{FALSE}.}
}
\value{
A list with the following components:
\describe{
\item{flow_directions}{List where each element describes the gradient flow at a vertex.}
\item{lmax_basin_assignment}{Integer vector indicating which maximum basin
each vertex belongs to, with \code{NA} for unassigned vertices}
\item{lmin_basin_assignment}{Integer vector indicating which minimum basin
each vertex belongs to, with \code{NA} for unassigned vertices}
\item{ambiguous_vertices}{Integer vector of vertices that belong to multiple
basins of the same type}
\item{basin_stats}{List containing statistics about the basins:
- n_max_basins: Number of maximum basins
- n_min_basins: Number of minimum basins
- coverage: Proportion of vertices assigned to at least one basin
- max_basin_sizes: Named vector of maximum basin sizes
- min_basin_sizes: Named vector of minimum basin sizes
}
}
}
\description{
Analyzes the gradient flow structure of a weighted graph by computing basins
of attraction for local maxima and minima, determining flow directions at
each vertex, and identifying ambiguous vertices that belong to multiple basins.
}
\details{
The function performs the following steps:
\itemize{
\item Computes basins of attraction for all local maxima using
\code{\link{lmax.basins}}
\item Computes basins of attraction for all local minima using
\code{\link{lmin.basins}}
\item Assigns each vertex to appropriate basins, identifying conflicts
\item Determines gradient flow directions based on neighboring values
\item For unassigned vertices, attempts to infer basin membership from
neighbors
}

Gradient flow directions indicate the steepest ascent and descent paths
from each vertex. When edge weights are provided, they influence the
determination of these paths by scaling the effective gradients.
}
\examples{
\dontrun{
# Create example graph
adj.list <- list(c(2), c(1,3), c(2,4,5), c(3), c(3))
y <- c(0.2, 0.5, 0.8, 1.0, 0.1)

# Define extrema
lmax.list <- list(list(lmax=4, vertices=c(4), label="peak"))
lmin.list <- list(list(lmin=5, vertices=c(5), label="valley"))

# Compute gradient flow
flow_info <- compute.graph.gradient.flow(adj.list, NULL, y,
                                         lmax.list, lmin.list)

# Examine results
print(flow_info$basin_stats)
}

}
\references{
Morse, M. (1934). The Calculus of Variations in the Large.
American Mathematical Society.

Forman, R. (1998). Morse theory for cell complexes.
Advances in Mathematics, 134(1), 90-145.
}
\seealso{
\code{\link{lmax.basins}}, \code{\link{lmin.basins}},
\code{\link{set.boundary}}
}
