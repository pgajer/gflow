% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circular_data_utils.R
\name{angle.alignment}
\alias{angle.alignment}
\title{Align Estimated Angles with True Angles}
\usage{
angle.alignment(true.angles, est.angles)
}
\arguments{
\item{true.angles}{A numeric vector of reference angles (in radians)}

\item{est.angles}{A numeric vector of estimated angles (in radians) to be aligned}
}
\value{
A list containing:
\item{angles}{The aligned angles after shifting and potential scaling}
\item{correlation}{Pearson correlation between true angles and aligned angles}
\item{type}{Character string indicating if the result is "shifted" or "scaled"}
}
\description{
Aligns a set of estimated angles with reference angles by finding the optimal
rotation and handling circular boundaries.
}
\details{
This function seeks to align angles that represent positions on a circle by:
\enumerate{
\item Finding the optimal shift that maximizes correlation with true angles
\item Handling boundary wrapping issues (when angles cross the \eqn{0/2pi} boundary)
\item Optionally scaling the angles to match the range of true angles
}

The function returns either a simple shifted version or a scaled version,
depending on which achieves higher correlation with the true angles.
}
\examples{
# Generate some true angles around a circle
true.angles <- seq(0, 2*pi - 0.1, length.out = 20)

# Create estimated angles with an arbitrary shift and some noise
est.angles <- (true.angles + 1.5) \%\% (2*pi) + rnorm(20, 0, 0.1)

# Align the estimated angles
aligned <- angle.alignment(true.angles, est.angles)

# Plot results
plot(true.angles, ylim=c(-0.5, 2*pi+0.5), pch=19, col="blue",
     main="Angle Alignment")
points(est.angles, pch=19, col="red")
points(aligned$angles, pch=19, col="green")
legend("topright", legend=c("True", "Estimated", "Aligned"),
       col=c("blue", "red", "green"), pch=19)

}
