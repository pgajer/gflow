% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_utils.R
\name{robust.transform}
\alias{robust.transform}
\title{Returns robust transform of a non-negative vector}
\usage{
robust.transform(x)
}
\arguments{
\item{x}{A numeric vector of non-negative numbers.}
}
\value{
A numeric vector of the same length as x, where positive values are divided by
the geometric mean of all positive values, and zero values remain zero.
}
\description{
This function normalizes positive values by their geometric mean while keeping zero values
as zero. The geometric mean is more robust to outliers than the arithmetic mean, making
this transformation useful for data with skewed distributions.
}
\details{
The transformation process:
\enumerate{
\item The geometric mean of positive values is calculated: \code{D = exp(mean(log(x[x > 0])))}
\item Each positive value is divided by \code{D: x[i] / D for x[i] > 0}
\item Zero values remain unchanged as 0
}
The geometric mean of the transformed positive values will be 1.
}
\note{
This function assumes all input values are non-negative. Negative values will cause
unexpected behavior as they are not checked.
}
\examples{
# Example 1: Basic usage
x <- c(0, 1, 4, 16, 64)
robust.transform(x)
# Geometric mean of positive transformed values equals 1

# Example 2: Comparison with arithmetic mean normalization
x <- c(0, 1, 2, 100)  # Outlier present
# Robust (geometric mean) normalization
robust.transform(x)
# Compare to arithmetic mean normalization
x_arith <- x
x_arith[x > 0] <- x[x > 0] / mean(x[x > 0])
x_arith  # More affected by the outlier
}
