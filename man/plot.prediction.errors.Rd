% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plot.prediction.errors}
\alias{plot.prediction.errors}
\title{Plot Prediction Errors for Multiple Smoothing Models}
\usage{
\method{plot}{prediction.errors}(
  x,
  xvals = NULL,
  cols = NULL,
  ltys = NULL,
  main = "",
  xlab = "Gaussian Mean",
  ylab = "Mean Absolute True Error",
  legend.pos = "topleft",
  legend.cex = 0.7,
  legend.ncol = 2,
  point.cex = 0.8,
  ylab.line = 2.8,
  legend.inset = 0.02,
  offset.factor = NULL,
  n.points = 10,
  ...
)
}
\arguments{
\item{x}{A prediction.errors object or a named list, data frame, or matrix containing
prediction errors for different models. If a list, each element should be a numeric
vector of errors and the names of the list elements are used in the plot legend.
If a data frame or matrix, each column represents errors for a different model and
column names are used in the legend.}

\item{xvals}{Numeric vector of x-axis values (typically independent variable values).
Can be NULL if x contains an 'xvals' attribute or component. Default is NULL.}

\item{cols}{Character vector of colors for the lines. Defaults to a preset
palette of 15 colors. Must be at least as long as the number of models.}

\item{ltys}{Numeric vector of line types. Defaults to a preset pattern of
15 line types. Must be at least as long as the number of models.}

\item{main}{Character string for the plot title (default: "")}

\item{xlab}{Character string for x-axis label (default: "Gaussian Mean")}

\item{ylab}{Character string for y-axis label (default: "Mean Absolute True Error")}

\item{legend.pos}{Character string specifying legend position (default: "topleft")}

\item{legend.cex}{Numeric scaling factor for legend text size (default: 0.7)}

\item{legend.ncol}{Integer number of columns in legend (default: 2)}

\item{point.cex}{Numeric scaling factor for point size (default: 0.8)}

\item{ylab.line}{Numeric value specifying the distance of the y-axis label from the plot
(in margin line units, default: 2.8)}

\item{legend.inset}{Numeric value specifying the inward shift of the legend from the
plot border as a fraction of the plot region (default: 0.02)}

\item{offset.factor}{Numeric value controlling the spacing between points on
different lines (default: floor(length(x) / 140)). Larger values create more
separation between points across different models. Set to 0 to align points
vertically across all lines.}

\item{n.points}{Integer number of points to plot per line (default: 10)}

\item{...}{Additional arguments (currently unused)}
}
\value{
Invisibly returns a list containing the colors and line types used in the plot
}
\description{
Creates a line plot comparing prediction errors across different smoothing models,
with customizable visual parameters. Each model's errors are represented by a line
with distinct color, line type, and point markers.
}
\details{
The function plots multiple lines representing prediction errors for different
models. Each line is distinguished by color, line type, and point markers. Points are
added at regular intervals along each line with slight offsets to prevent overlapping.
If more than 15 models are provided, the function will throw an error unless custom
color and line type vectors of sufficient length are supplied.
}
\examples{
\dontrun{
# Using a named list
errors_list <- list(
  model1 = c(1,2,3,4,5),
  model2 = c(2,3,4,5,6)
)
xvals <- c(1,2,3,4,5)

# Create prediction.errors object
pe <- prediction.errors(errors_list, xvals)

# Basic plot
plot(pe)

# Using a data frame
errors_df <- data.frame(
  model1 = c(1,2,3,4,5),
  model2 = c(2,3,4,5,6)
)

# Create prediction.errors object from data frame
pe_df <- prediction.errors(errors_df, xvals = 1:5)

# Plot with custom parameters
plot(pe_df,
     cols = c("red", "blue"),
     ltys = c(1, 2),
     main = "Prediction Errors",
     legend.pos = "topright")
}

}
