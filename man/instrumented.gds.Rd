% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_diffusion_smoother.R
\name{instrumented.gds}
\alias{instrumented.gds}
\title{Instrumented Graph Diffusion Smoother}
\usage{
instrumented.gds(
  graph,
  edge.lengths,
  y,
  y.true,
  n.time.steps,
  base.step.factor,
  use.pure.laplacian = FALSE,
  ikernel = 1,
  kernel.scale = 1,
  dist.normalization.factor = 1.01,
  increase.factor = 1.1,
  decrease.factor = 0.8,
  oscillation.factor = 0.5,
  min.step = 0.01,
  max.step = 2
)
}
\arguments{
\item{graph}{List of integer vectors representing adjacency structure.}

\item{edge.lengths}{List of numeric vectors containing edge lengths.}

\item{y}{Numeric vector of initial vertex values.}

\item{y.true}{Numeric vector of ground truth values for evaluation.}

\item{n.time.steps}{Integer number of diffusion steps.}

\item{base.step.factor}{Initial step size for all vertices.}

\item{use.pure.laplacian}{Logical; if \code{TRUE}, uses uniform weights.
Default is \code{FALSE}.}

\item{ikernel}{Integer kernel type (1-3). Default is 1.}

\item{kernel.scale}{Scale parameter for kernels. Default is 1.0.}

\item{dist.normalization.factor}{Not used in current implementation.}

\item{increase.factor}{Multiplier for increasing step size. Default is 1.1.}

\item{decrease.factor}{Multiplier for decreasing step size. Default is 0.8.}

\item{oscillation.factor}{Multiplier when oscillating. Default is 0.5.}

\item{min.step}{Minimum allowed step size. Default is 0.01.}

\item{max.step}{Maximum allowed step size. Default is 2.0.}
}
\value{
An object of class \code{"instrumented.gds"} containing detailed
metrics and trajectories.
}
\description{
Performs graph diffusion smoothing with comprehensive instrumentation and
adaptive step sizes. This function collects detailed performance metrics
and allows fine-tuned control over the diffusion process.
}
\examples{
\dontrun{
# Example with simple graph
graph <- list(c(2), c(1,3), c(2))
edge.lengths <- list(c(1), c(1,1), c(1))
y.true <- c(0, 1, 0)
y.noisy <- y.true + rnorm(3, 0, 0.1)

result <- instrumented.gds(
  graph = graph,
  edge.lengths = edge.lengths,
  y = y.noisy,
  y.true = y.true,
  n.time.steps = 50,
  base.step.factor = 0.5
)
}

}
