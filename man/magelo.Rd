% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magelo.R
\name{magelo}
\alias{magelo}
\title{Model Averaged Grid-based Epsilon LOwess (MAGELO)}
\usage{
magelo(
  x,
  y,
  y.true = NULL,
  grid.size = 400,
  degree = 1,
  min.K = 5,
  f = NULL,
  bw = NULL,
  min.bw.f = 0.025,
  method = ifelse(length(x) < 1000, "LOOCV", "CV"),
  n.bws = 100,
  n.BB = 1000,
  get.predictions.CrI = TRUE,
  get.gpredictions.CrI = TRUE,
  get.BB.predictions = FALSE,
  get.BB.gpredictions = FALSE,
  level = 0.95,
  n.C.itr = 0,
  C = 6,
  stop.C.itr.on.min = TRUE,
  n.cv.folds = 10,
  n.cv.reps = 20,
  nn.kernel = "epanechnikov",
  y.binary = FALSE,
  cv.nNN = 3,
  n.perms = 0,
  n.cores = 1,
  use.binloss = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{x}{Numeric vector of predictor values}

\item{y}{Numeric vector of response values, must be same length as x}

\item{y.true}{Optional numeric vector of true response values (for validation)}

\item{grid.size}{Integer specifying the number of grid points for model fitting.
Default is 400, which provides good balance between accuracy and computation speed}

\item{degree}{Integer specifying polynomial degree (0, 1, or 2):
- 0: weighted mean regression
- 1: local linear regression (y ~ x)
- 2: local quadratic regression (y ~ poly(x, 2))}

\item{min.K}{Integer specifying minimum number of points required in each local neighborhood}

\item{f}{Numeric between 0 and 1, specifying the proportion of x range to use for each local window.
If NULL, optimal value is determined by cross-validation}

\item{bw}{Numeric specifying bandwidth (radius of disk neighborhood).
If NULL, optimal value is determined by cross-validation}

\item{min.bw.f}{Numeric specifying minimum bandwidth as fraction of x range.
min_bandwidth = min.bw.f * range(x). Default: 0.025}

\item{method}{Character string specifying bandwidth optimization method:
- "LOOCV": Leave-one-out cross-validation (for n < 1000)
- "CV": K-fold cross-validation (for n >= 1000)}

\item{n.bws}{Integer specifying number of bandwidths to try during optimization}

\item{n.BB}{Integer specifying number of Bayesian bootstrap iterations}

\item{get.predictions.CrI}{Logical; if TRUE, compute credible intervals for fitted values at x}

\item{get.gpredictions.CrI}{Logical; if TRUE, compute credible intervals for fitted values at grid points}

\item{get.BB.predictions}{Logical; if TRUE, return matrix of bootstrap estimates at x}

\item{get.BB.gpredictions}{Logical; if TRUE, return matrix of bootstrap estimates at grid points}

\item{level}{Numeric between 0 and 1 specifying credible interval level}

\item{n.C.itr}{Integer specifying number of Cleveland's iterative re-weighting steps}

\item{C}{Numeric specifying scaling factor for residuals in robust fitting}

\item{stop.C.itr.on.min}{Logical; if TRUE, stop iterations when improvement plateaus}

\item{n.cv.folds}{Integer specifying number of folds for cross-validation}

\item{n.cv.reps}{Integer specifying number of cross-validation repetitions}

\item{nn.kernel}{Character string specifying kernel function:
"epanechnikov", "triangular", "tr.exponential", or "normal"}

\item{y.binary}{Logical; if TRUE, use binary loss function for optimization}

\item{cv.nNN}{Integer specifying number of nearest neighbors for grid interpolation}

\item{n.perms}{Integer specifying number of y permutations for p-value calculation}

\item{n.cores}{Integer specifying number of CPU cores for parallel processing}

\item{use.binloss}{Logical; if TRUE, use binary loss function for optimization}

\item{verbose}{Logical; if TRUE, print progress information}
}
\value{
A list with class "magelo" containing:
\itemize{
\item Fitted values at grid points (gpredictions) and input locations (predictions)
\item Credible intervals if requested
\item Bootstrap estimates if requested
\item Optimal bandwidth and optimization results
\item Model coefficients
\item Input parameters
}
}
\description{
A non-parametric regression method that combines local polynomial regression with model
averaging using disk-shaped neighborhoods. Unlike traditional LOWESS which uses k-nearest
neighbors, MAGELO employs fixed-radius neighborhoods (disks) and averages local polynomial
models fitted at uniformly spaced grid points. This approach provides smoother transitions
between local models and more stable estimates in regions with varying data density.
}
\section{Uncertainty Estimation}{

The function provides several options for uncertainty quantification through Bayesian bootstrap.
Use \code{n.BB} to specify the number of bootstrap iterations, and control which intervals
to compute with \code{get.predictions.CrI} and \code{get.gpredictions.CrI}. The credible
interval level can be adjusted with the \code{level} parameter.
}

\section{Robustness Parameters}{

MAGELO includes options for robust fitting using Cleveland's iterative re-weighting procedure.
The \code{n.C.itr} parameter controls the number of iterations, while \code{C} sets the
scaling factor for residuals. Use \code{stop.C.itr.on.min} to enable early stopping when
improvements plateau.
}

\section{Permutation Testing}{
 Statistical significance can be assessed
through permutation testing. Set \code{n.perms} for standard permutation
tests. If true response values are available, provide them via
\code{y.true} for validation purposes.
}

\examples{
x <- seq(0, 10, length.out = 100)
y <- sin(x) + rnorm(100, 0, 0.1)
fit <- magelo(x, y, degree = 1)
plot(x, y)
lines(fit$xgrid, fit$gpredictions, col = "red")

}
