% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_maximal_packing.R
\name{validate.maximal.packing}
\alias{validate.maximal.packing}
\title{Validate a Maximal Packing}
\usage{
validate.maximal.packing(
  adj.list,
  weight.list,
  packing.vertices,
  max.packing.radius
)
}
\arguments{
\item{adj.list}{A list where each element is a vector of adjacent vertex
indices (1-based) for the corresponding vertex.}

\item{weight.list}{A list where each element is a vector of edge weights
corresponding to the adjacencies in \code{adj.list}.}

\item{packing.vertices}{An integer vector of vertex indices (1-based) that
form the packing to be validated.}

\item{max.packing.radius}{A numeric value representing the minimum distance
that should separate any two vertices in the packing.}
}
\value{
A list with class "packing_validation" containing validation results:
\item{valid}{Logical indicating whether the packing satisfies the
distance constraint}
\item{min.packing.distance}{The minimum distance found between any two
packing vertices}
\item{max.coverage.distance}{The maximum distance from any non-packing
vertex to its nearest packing vertex}
\item{violations}{A data frame containing details of any violations found,
or NULL if none. Contains columns: type, vertex1, vertex2, distance}
\item{is.maximal}{Logical indicating whether the packing is maximal
(no vertices can be added)}
\item{potential.additions}{Integer vector of vertex indices that could
potentially be added to the packing if it's not maximal, or NULL
if maximal}
}
\description{
Validates whether a given vertex packing is maximal and correctly
satisfies the distance constraints. A packing is valid if all vertices
are separated by at least the specified radius, and is maximal if no
additional vertices can be added without violating this constraint.
}
\details{
This function performs two key validations:
\enumerate{
\item \strong{Packing Property}: Verifies that all vertices in the
packing are separated by at least \code{max.packing.radius}.
\item \strong{Maximality}: Verifies that no additional vertex can be
added to the packing without violating the packing property.
}

The function uses the \code{igraph} package to compute shortest path
distances between vertices using Dijkstra's algorithm.
}
\examples{
\dontrun{
# Create a simple path graph with 6 vertices
adj.list <- list(
  c(2),           # vertex 1 connects to 2
  c(1, 3),        # vertex 2 connects to 1 and 3
  c(2, 4),        # vertex 3 connects to 2 and 4
  c(3, 5),        # vertex 4 connects to 3 and 5
  c(4, 6),        # vertex 5 connects to 4 and 6
  c(5)            # vertex 6 connects to 5
)
weight.list <- list(
  c(1), c(1, 1), c(1, 1), c(1, 1), c(1, 1), c(1)
)

# Test a packing with vertices 1 and 4
packing <- c(1, 4)
radius <- 3

# Validate the packing
result <- validate.maximal.packing(adj.list, weight.list, packing, radius)
print(result)
}

}
