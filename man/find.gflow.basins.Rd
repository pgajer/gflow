% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gflow_basins.R
\name{find.gflow.basins}
\alias{find.gflow.basins}
\title{Find Gradient-Flow Basins on a Weighted Graph}
\usage{
find.gflow.basins(
  adj.list,
  weight.list,
  y,
  min.basin.size = 1L,
  min.path.size = 2L,
  q.edge.thld = 0.5
)
}
\arguments{
\item{adj.list}{A list of integer vectors. Each vector contains indices of vertices
adjacent to the corresponding vertex. Indices must be 1-based.}

\item{weight.list}{A list of numeric vectors. Each vector contains weights of edges
corresponding to adjacencies in \code{adj.list}. Must have the same structure
as \code{adj.list}.}

\item{y}{A numeric vector of length \eqn{n}, the response values at each graph vertex.}

\item{min.basin.size}{An integer scalar, the minimum number of vertices a basin must
contain to be considered significant. Default is 1.}

\item{min.path.size}{An integer scalar, the minimum number of vertices along a
shortest path for which monotonicity is tested. Default is 2.}

\item{q.edge.thld}{A numeric scalar in \eqn{[0,1]}, the quantile threshold for maximum
allowed edge weight along geodesics. Default is 0.5.}
}
\value{
An object of class \code{"gflow_basins"}, which is a list with the following components:
\describe{
\item{basins}{A list with two elements:
\describe{
\item{ascending}{A list of local-minimum basins}
\item{descending}{A list of local-maximum basins}
}
Each basin is a list with components:
\describe{
\item{vertex}{Integer, the 1-based vertex index of the extremum}
\item{value}{Numeric, the function value at the extremum}
\item{basin}{A matrix with columns "vertex" and "distance"}
\item{label}{Character, a unique label for the extremum}
}
}
\item{local_extrema}{A data frame summarizing all detected extrema with columns:
\describe{
\item{vertex_index}{Integer, 1-based vertex index}
\item{is_maximum}{Integer, 1 if maximum, 0 if minimum}
\item{label}{Character, unique label (e.g., "M1", "m1")}
\item{fn_value}{Numeric, function value at extremum}
}
}
}
}
\description{
Identifies local minima and maxima of a scalar field on a graph
and computes their basins via geodesic flow analysis.
}
\examples{
# Create a simple graph
adj.list <- list(c(2, 3), c(1, 3, 4), c(1, 2, 4), c(2, 3))
weight.list <- list(c(1, 1), c(1, 1, 1), c(1, 1, 1), c(1, 1))
y <- c(1, 0, 2, 1.5)

\donttest{
# Find basins (requires compiled C++ backend)
result <- find.gflow.basins(adj.list, weight.list, y,
                            min.basin.size = 1,
                            min.path.size = 2,
                            q.edge.thld = 0.5)
summary(result)
}

}
\seealso{
\code{\link{summary.gflow_basins}}, \code{\link{find.local.extrema}}
}
