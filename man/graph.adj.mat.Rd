% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geodesics.R
\name{graph.adj.mat}
\alias{graph.adj.mat}
\title{Creates weights adjacency matrix given a matrix of edges and position matrix
of the corresponding vertices}
\usage{
graph.adj.mat(X, E)
}
\arguments{
\item{X}{A position matrix of vertices of the graph where each row represents
a vertex position in \eqn{R^d} space (d = ncol(X)).}

\item{E}{A two-column matrix where each row represents an edge. \code{E[i,1]} and \code{E[i,2]}
are the indices of the vertices (rows of X) connected by the i-th edge.}
}
\value{
A symmetric n x n adjacency matrix where n = nrow(X). Element
\code{A[i,j]} contains the Euclidean distance between vertices \code{i}
and \code{j} if they are connected by an edge, and 0 otherwise.
}
\description{
The weights adjacency matrix A has the property that the (i,j) entry is the
weight of the edge between i and j, if such edge exists, and 0 otherwise. The
weights are distances in \eqn{R^{ncol(X)}} between corresponding vertices (rows of
X).
}
\details{
This function constructs a weighted adjacency matrix for a graph where:
\itemize{
\item Vertices are represented by their positions in X
\item Edges are specified by the index pairs in E
\item Edge weights are the Euclidean distances between connected vertices
}

The resulting matrix is symmetric since the graph is treated as undirected.
Self-loops (edges from a vertex to itself) will have weight 0.
}
\note{
The function assumes 1-based indexing for the edge matrix E. All indices in E
must be between 1 and nrow(X).
}
\examples{
# Create a simple triangle graph
X <- matrix(c(0,0, 1,0, 0,1), ncol=2, byrow=TRUE)
E <- matrix(c(1,2, 2,3, 3,1), ncol=2, byrow=TRUE)
A <- graph.adj.mat(X, E)
print(A)
# Should show distances: A[1,2]=A[2,1]=1, A[2,3]=A[3,2]=sqrt(2), A[3,1]=A[1,3]=1

}
