% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geodesics.R
\name{geodesic.knn}
\alias{geodesic.knn}
\title{Estimates geodesic (shortest path) nearest neighbors}
\usage{
geodesic.knn(X, k, K = 5, G = NULL)
}
\arguments{
\item{X}{A numeric matrix.}

\item{k}{The number of nearest neighbors to be returned.}

\item{K}{The number of neighbors in knn.graph() to build a knn graph. When
k=1, the knn graph is the minimal spanning tree.}

\item{G}{A graph associated with X.}
}
\value{
A list containing two matrices:
\item{nn.index}{An n x k matrix where element \code{[i,j]} contains the index of the j-th
geodesic nearest neighbor of point i.}
\item{nn.dist}{An n x k matrix where element \code{[i,j]} contains the geodesic distance
to the j-th nearest neighbor of point i.}
}
\description{
Estimates geodesic (shortest path) nearest neighbors
}
\details{
This function computes k-nearest neighbors based on geodesic distances (shortest paths
through a graph) rather than Euclidean distances. The geodesic distance is particularly
useful for data that lies on a manifold, where the straight-line distance between points
may not accurately reflect their true similarity.

The function first constructs or uses a provided graph G to compute geodesic distances
between all pairs of points, then identifies the k nearest neighbors for each point
based on these distances.
}
\examples{
\dontrun{
# Generate sample data on a spiral
t <- seq(0, 4*pi, length.out = 100)
X <- cbind(t*cos(t), t*sin(t))

# Find 5 geodesic nearest neighbors
gnn <- geodesic.knn(X, k = 5, K = 10)

# Compare with Euclidean nearest neighbors
enn <- get.knn(X, k = 5)
}

}
\seealso{
\code{\link{estimate.geodesic.distances}} for computing geodesic distances
\code{\link{dist.to.knn}} for converting distance matrix to k-NN format
}
