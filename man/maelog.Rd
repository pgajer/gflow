% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maelog.R
\name{maelog}
\alias{maelog}
\title{Model-Averaged Local Logistic Regression}
\usage{
maelog(
  x,
  y,
  fit.quadratic = FALSE,
  pilot.bandwidth = -1,
  kernel = 7L,
  min.points = NULL,
  cv.folds = 0L,
  n.bws = 50L,
  min.bw.factor = 0.05,
  max.bw.factor = 0.9,
  max.iterations = 100L,
  ridge.lambda = 1e-06,
  tolerance = 1e-08,
  with.errors = FALSE,
  with.bw.predictions = TRUE
)
}
\arguments{
\item{x}{Numeric vector of predictor variables (explanatory variable).}

\item{y}{Binary response vector containing only 0 or 1 values.}

\item{fit.quadratic}{Logical; if \code{TRUE}, fits local quadratic models;
if \code{FALSE} (default), fits local linear models.}

\item{pilot.bandwidth}{Numeric; the bandwidth parameter for local fitting.
If less than or equal to 0 (default = -1), bandwidth is selected automatically
using cross-validation or LOOCV approximation.}

\item{kernel}{Integer specifying the kernel function for weight calculation:
\describe{
\item{1}{Epanechnikov kernel}
\item{2}{Triangular kernel}
\item{4}{Laplace (double exponential) kernel}
\item{5}{Gaussian (normal) kernel}
\item{6}{Biweight (quartic) kernel}
\item{7}{Tricube kernel (default)}
}}

\item{min.points}{Integer; minimum number of points required in each local
neighborhood for fitting. If \code{NULL} (default), automatically set to 3 for
linear models or 4 for quadratic models. Must be at least 3 for linear and
4 for quadratic models.}

\item{cv.folds}{Integer; number of folds for cross-validation when selecting
bandwidth. If 0 (default), uses leave-one-out cross-validation (LOOCV)
approximation. Must be between 0 and \code{length(x)}.}

\item{n.bws}{Integer; number of bandwidth candidates to evaluate during
automatic selection. Default is 50. Must be at least 2.}

\item{min.bw.factor}{Numeric between 0 and 1; minimum bandwidth as a fraction
of the data range. Default is 0.05. The minimum bandwidth tested is
\code{min.bw.factor * diff(range(x))}.}

\item{max.bw.factor}{Numeric greater than \code{min.bw.factor}; maximum
bandwidth as a fraction of the data range. Default is 0.9. The maximum
bandwidth tested is \code{max.bw.factor * diff(range(x))}.}

\item{max.iterations}{Integer; maximum number of iterations for the local
likelihood maximization algorithm. Default is 100. Must be positive.}

\item{ridge.lambda}{Numeric; ridge penalty parameter for numerical stability
in the local regression. Default is 1e-6. Must be positive.}

\item{tolerance}{Numeric; convergence tolerance for the iterative fitting
algorithm. Default is 1e-8. Must be positive.}

\item{with.errors}{Logical; if \code{TRUE}, computes and returns standard
errors for the predictions. Default is \code{FALSE}.}

\item{with.bw.predictions}{Logical; if \code{TRUE} (default), returns the
matrix of predictions for all bandwidth values tested during selection.
Set to \code{FALSE} to save memory when only the optimal predictions are needed.}
}
\value{
A list of class \code{"maelog"} containing:
\item{predictions}{Numeric vector of predicted probabilities at the input points.}
\item{errors}{Numeric vector of standard errors if \code{with.errors = TRUE};
\code{NULL} otherwise.}
\item{opt.bw}{The selected optimal bandwidth if \code{pilot.bandwidth <= 0};
the input bandwidth otherwise.}
\item{candidate.bandwidths}{Numeric vector of bandwidth values tested during
selection if \code{pilot.bandwidth <= 0}; \code{NULL} otherwise.}
\item{mean.errors}{Numeric vector of cross-validation errors corresponding to
\code{candidate.bandwidths} if \code{pilot.bandwidth <= 0}; \code{NULL} otherwise.}
\item{bw.predictions}{Matrix where column \code{i} contains predictions using
\code{candidate.bandwidths[i]} if \code{with.bw.predictions = TRUE} and
\code{pilot.bandwidth <= 0}; \code{NULL} otherwise.}
\item{x}{The input predictor values.}
\item{y}{The input response values.}
\item{call}{The matched function call.}
\item{kernel}{The kernel type used.}
\item{fit.quadratic}{Whether quadratic terms were included.}
}
\description{
Performs model-averaged local logistic regression using kernel-weighted maximum
likelihood estimation. The function implements bandwidth selection via cross-validation
and supports both linear and quadratic local polynomial models.
}
\details{
The function implements a local likelihood approach to logistic regression,
where a weighted logistic model is fit in a neighborhood around each point.
The weights are determined by a kernel function and bandwidth parameter.

\subsection{Model Specification}{
At each point \eqn{x_0}, the local log-odds are modeled as:
\itemize{
\item Linear: \eqn{\log\left(\frac{p(x)}{1-p(x)}\right) = \beta_0 + \beta_1(x - x_0)}
\item Quadratic: \eqn{\log\left(\frac{p(x)}{1-p(x)}\right) = \beta_0 + \beta_1(x - x_0) + \beta_2(x - x_0)^2}
}
where \eqn{p(x) = P(Y = 1|X = x)}.
}

\subsection{Bandwidth Selection}{
When \code{pilot.bandwidth <= 0}, the function automatically selects the
bandwidth by minimizing the cross-validation error. The candidate bandwidths
are logarithmically spaced between \code{min.bw.factor} and \code{max.bw.factor}
times the data range.
}

\subsection{Kernel Functions}{
All kernel functions \eqn{K(u)} are defined on the interval \eqn{[-1, 1]} and
are zero outside this interval:
\itemize{
\item Epanechnikov: \eqn{K(u) = \frac{3}{4}(1 - u^2)}
\item Triangular: \eqn{K(u) = 1 - |u|}
\item Laplace: \eqn{K(u) = \frac{1}{2}\exp(-|u|)}
\item Gaussian: \eqn{K(u) = \frac{1}{\sqrt{2\pi}}\exp(-\frac{u^2}{2})}
\item Biweight: \eqn{K(u) = \frac{15}{16}(1 - u^2)^2}
\item Tricube: \eqn{K(u) = \frac{70}{81}(1 - |u|^3)^3}
}
}
}
\examples{
\dontrun{
# Generate example data
set.seed(123)
n <- 200
x <- seq(0, 1, length.out = n)
true.prob <- plogis(10 * (x - 0.5))  # Logistic function
y <- rbinom(n, 1, true.prob)

# Fit model with automatic bandwidth selection
fit1 <- maelog(x, y)

# Plot results
plot(x, y, col = rgb(0, 0, 0, 0.5), pch = 16,
     main = "Local Logistic Regression",
     xlab = "x", ylab = "Probability")
lines(x, fit1$predictions, col = "blue", lwd = 2)
lines(x, true.prob, col = "red", lwd = 2, lty = 2)
legend("topleft", c("Fitted", "True"),
       col = c("blue", "red"), lwd = 2, lty = c(1, 2))

# Fit with quadratic local models
fit2 <- maelog(x, y, fit.quadratic = TRUE, cv.folds = 5)

# Fit with fixed bandwidth
fit3 <- maelog(x, y, pilot.bandwidth = 0.1)

# Compare different kernels
fit.tricube <- maelog(x, y, kernel = 7)
fit.gauss <- maelog(x, y, kernel = 5)

# Larger example with cross-validation
n <- 1000
x <- runif(n, -2, 2)
prob <- plogis(2 * sin(pi * x))
y <- rbinom(n, 1, prob)

# Compare linear vs quadratic with 10-fold CV
fit.linear <- maelog(x, y, fit.quadratic = FALSE, cv.folds = 10)
fit.quad <- maelog(x, y, fit.quadratic = TRUE, cv.folds = 10)

# Plot bandwidth selection results
par(mfrow = c(1, 2))
plot(fit.linear$candidate.bandwidths, fit.linear$mean.errors,
     type = "l", xlab = "Bandwidth", ylab = "CV Error",
     main = "Linear Model")
abline(v = fit.linear$opt.bw, col = "red", lty = 2)

plot(fit.quad$candidate.bandwidths, fit.quad$mean.errors,
     type = "l", xlab = "Bandwidth", ylab = "CV Error",
     main = "Quadratic Model")
abline(v = fit.quad$opt.bw, col = "red", lty = 2)
}

}
\references{
Cleveland, W. S. (1979). Robust locally weighted regression and smoothing
scatterplots. \emph{Journal of the American Statistical Association}, 74(368), 829-836.

Fan, J., & Gijbels, I. (1996). \emph{Local Polynomial Modelling and Its
Applications}. Chapman & Hall/CRC.

Loader, C. (1999). \emph{Local Regression and Likelihood}. Springer.
}
\seealso{
\code{\link{predict.maelog}} for predictions at new points,
\code{\link{plot.maelog}} for diagnostic plots
}
