% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magelo.R
\name{fb.magelo}
\alias{fb.magelo}
\title{1D MAGELO (Model Averaged Grid-based Epsilon LOwess) with fixed boundary condition
Given a vector 'y', this routine finds 'predictions' such that the first element of
'predictions' equals the first element of 'y', and the last element of 'predictions'
equals the last element of 'y'}
\usage{
fb.magelo(
  x,
  y,
  grid.size = 400,
  degree = 1,
  min.K = 5,
  f = NULL,
  bw = NULL,
  min.bw.f = 0.025,
  method = ifelse(length(x) < 1000, "LOOCV", "CV"),
  n.bws = 100,
  n.BB = 1000,
  get.predictions.CrI = TRUE,
  get.gpredictions.CrI = TRUE,
  get.BB.predictions = FALSE,
  get.BB.gpredictions = FALSE,
  level = 0.95,
  n.C.itr = 0,
  C = 6,
  stop.C.itr.on.min = TRUE,
  n.cv.folds = 10,
  n.cv.reps = 20,
  nn.kernel = "epanechnikov",
  y.binary = FALSE,
  cv.nNN = 3,
  n.perms = 0,
  n.cores = 1,
  use.binloss = FALSE,
  verbose = FALSE,
  fb.C = 1
)
}
\arguments{
\item{x}{A numeric vector of a predictor variable.}

\item{y}{A numeric vector of an outcome variable.}

\item{grid.size}{The number of grid points; default 400 which provides good balance
between accuracy and computation speed.}

\item{degree}{A degree of the polynomial of x in the linear regression; 0
means weighted mean, 1 is regular linear model lm(y ~ x), and deg = d is
lm(y ~ poly(x, d)). The only allowed values are 0, 1 and 2.}

\item{min.K}{The minimal number of x points that must be present in each disk neighborhood.}

\item{f}{The proportion of the range of x that is used within a moving window
to train the model. If NULL, the optimal value of f will be found using
cross-validation optimization algorithm.}

\item{bw}{A bandwidth parameter (radius of disk neighborhood).}

\item{min.bw.f}{The min.bw factor, such that, min.bw = min.bw.f * dx, where dx <- diff(x.range).
The default value is 0.025.}

\item{method}{A method of estimating the optimal value of the bandwidth.
Possible choices are "LOOCV" (for small datasets) and "CV"}

\item{n.bws}{The number of bandwidths in the optimization process. Default: 100.}

\item{n.BB}{The number of Bayesian bootstrap (BB) iterations for estimates of CI's.}

\item{get.predictions.CrI}{A logical parameter. If TRUE, BB with quantile determined by the
value of 'level' will be used to determine the upper and lower limits of CI's.}

\item{get.gpredictions.CrI}{Set to TRUE if gpredictions.CI's need to be estimated.}

\item{get.BB.predictions}{Set to TRUE if a matrix of Bayesian bootstrap estimates of
predictions is to be returned.}

\item{get.BB.gpredictions}{Set to TRUE if a matrix of Bayesian bootstrap estimates of
gpredictions is to be returned.}

\item{level}{A confidence level.}

\item{n.C.itr}{The number of Cleveland's absolute residue based reweighting iterations
for robust estimates of mean y values.}

\item{C}{A scaling of |res| parameter changing |res| to |res|/C before applying
ae.kernel to |res|'s.}

\item{stop.C.itr.on.min}{A logical variable, if TRUE, the Cleveland's iterative reweighting
stops when the maximum of the absolute values of differences of
the old and new predictions estimates reach a local minimum.}

\item{n.cv.folds}{The number of cross-validation folds. Used only when f = NULL. Default value: 10.}

\item{n.cv.reps}{The number of repetitions of cross-validation. Used only when f = NULL. Default value: 20.}

\item{nn.kernel}{A kernel for weighting neighbors. Options: "epanechnikov", "triangular",
"tr.exponential", "normal".}

\item{y.binary}{A logical variable. If TRUE, bw optimization is going to use a binary
loss function mean(y(1-p) + (1-y)p).}

\item{cv.nNN}{The number of nearest neighbors in interpolation used to find predictions
given gpredictions in the cv routines.}

\item{n.perms}{Number of y permutations for p-value calculation. Default: 0.}

\item{n.cores}{Number of CPU cores for parallel processing. Default: 1.}

\item{use.binloss}{Logical; if TRUE, use binary loss function for optimization.}

\item{verbose}{Prints info about what is being done.}

\item{fb.C}{The number of bw's away from the boundary points of the domain of x
that the adjusting of gpredictions will take place, so that gpredictions
satisfies the boundary condition.}
}
\value{
A list of class "magelo" containing input parameters as well as fitted values,
credible intervals, bootstrap estimates, and model coefficients
}
\description{
1D MAGELO (Model Averaged Grid-based Epsilon LOwess) with fixed boundary condition
Given a vector 'y', this routine finds 'predictions' such that the first element of
'predictions' equals the first element of 'y', and the last element of 'predictions'
equals the last element of 'y'
}
