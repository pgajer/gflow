% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/boxcox_utils.R
\name{boxcox.mle}
\alias{boxcox.mle}
\title{Box-Cox MLE for the power parameter \eqn{\lambda}}
\usage{
boxcox.mle(formula, data, lambdas = seq(-2, 2, by = 0.1), refine = TRUE)
}
\arguments{
\item{formula}{A model formula of the form \code{y ~ x1 + x2 + ...}, or
an \code{\link{lm}} object. The response \code{y} must be strictly
positive.}

\item{data}{Optional data frame for \code{formula}. Ignored if \code{formula}
is an \code{lm} object.}

\item{lambdas}{Numeric vector of candidate \eqn{\lambda} values used to build
the coarse profile (default \code{seq(-2, 2, by = 0.1)}).}

\item{refine}{Logical; if \code{TRUE} (default) performs a 1D \code{\link{optimize}}
search near the best grid point to refine \eqn{\lambda}.}
}
\value{
A list with components:
\item{lambda}{The MLE \eqn{\hat\lambda}.}
\item{loglik}{A data frame with columns \code{lambda} and \code{loglik}
giving the profile evaluated on the coarse and dense grids.}
\item{ci95}{Approximate 95\\% confidence interval for \eqn{\lambda}
from the LR cutoff, returned as a numeric vector of length 2.}
}
\description{
Estimates the Box-Cox power parameter \eqn{\lambda} by profiling the
Gaussian log-likelihood over a grid with optional local refinement.
}
\details{
For each \eqn{\lambda} in \code{lambdas}, the response is transformed via
\code{\link{boxcox.transform}} and a least-squares fit is computed with
\code{\link{lm.fit}}. The profiled log-likelihood
\eqn{\ell(\lambda)} is
\deqn{
  \ell(\lambda) = -\frac{n}{2}\log\!\left(\frac{\mathrm{RSS}(\lambda)}{n}\right)
                  + (\lambda - 1)\sum_{i=1}^n \log y_i,
}
up to an additive constant. A 95\\% confidence interval is obtained from the
likelihood-ratio cutoff \eqn{2\{\ell(\hat\lambda)-\ell(\lambda)\} \le \chi^2_{1,0.95}}.

The implementation covers the standard unweighted Gaussian linear model.
(Weighted fits can be added using \code{lm.wfit} and a weighted
\eqn{\sum \log y} term.)
}
\examples{
set.seed(1)
n <- 60
x <- runif(n)
y <- exp(1 + 2 * x + rnorm(n, sd = 0.2))  # positive response
d <- data.frame(y = y, x = x)

fit <- boxcox.mle(y ~ x, data = d)
fit$lambda
head(fit$loglik)
fit$ci95

# Transform y with the estimated lambda
y.bc <- boxcox.transform(d$y, fit$lambda)

}
\references{
Box, G. E. P. and Cox, D. R. (1964).
An analysis of transformations. \emph{Journal of the Royal Statistical Society. Series B}, \strong{26}(2), 211-252.
}
