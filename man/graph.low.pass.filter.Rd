% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_spectrum.R
\name{graph.low.pass.filter}
\alias{graph.low.pass.filter}
\title{Compute Low-Pass Filter of a Function Over a Graph}
\usage{
graph.low.pass.filter(init.ev, evectors, y.gft)
}
\arguments{
\item{init.ev}{An integer specifying the index (1-based) of the first
eigenvalue to include in the low-pass filter. Must be between 1 and
the number of eigenvectors.}

\item{evectors}{A numeric matrix of eigenvectors of the graph Laplacian.
Each column corresponds to an eigenvector, ordered by their associated
eigenvalues.}

\item{y.gft}{A numeric matrix representing the Graph Fourier Transform (GFT)
of the function over the graph. The first column should contain
the GFT coefficients corresponding to each eigenvector.}
}
\value{
A numeric vector of length equal to the number of vertices,
representing the filtered function values over the graph.
}
\description{
Computes the low-pass filter of a function over a graph using
the Graph Fourier Transform (GFT). The filter is applied by summing
the contributions of the eigenvectors starting from a specified index,
effectively filtering out high-frequency components.
}
\details{
The Graph Fourier Transform decomposes a signal defined on the vertices
of a graph into its frequency components using the eigenvectors of the
graph Laplacian. Low-pass filtering retains only the low-frequency
components (associated with smaller eigenvalues), which typically
represent smooth variations over the graph structure.
}
\examples{
# Create example eigenvectors (2 vertices, 2 eigenvectors)
evectors <- matrix(c(1/sqrt(2), 1/sqrt(2), 1/sqrt(2), -1/sqrt(2)),
                  nrow = 2, ncol = 2)

# Example GFT coefficients
y.gft <- matrix(c(3, 1), nrow = 2, ncol = 1)

# Apply low-pass filter starting from the first eigenvector
filtered <- graph.low.pass.filter(1, evectors, y.gft)

# Apply low-pass filter using only the second eigenvector
filtered_high <- graph.low.pass.filter(2, evectors, y.gft)

}
\seealso{
\code{\link{graph.spectrum}}
}
