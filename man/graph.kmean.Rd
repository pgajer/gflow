% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_kmean.R
\name{graph.kmean}
\alias{graph.kmean}
\title{Compute the Kernel-weighted Graph Neighbor Mean}
\usage{
graph.kmean(
  adj.list,
  edge.lengths,
  y,
  kernel = 1,
  dist.normalization.factor = 1.01
)
}
\arguments{
\item{adj.list}{A list of integer vectors representing the adjacency list of
the graph. Each element contains the indices of neighboring vertices
(1-based indexing).}

\item{edge.lengths}{A list of numeric vectors containing the edge lengths
(distances) corresponding to the neighbors in \code{adj.list}. Must have
the same structure as \code{adj.list}.}

\item{y}{A numeric vector of values associated with each vertex in the graph.
Length must equal the number of vertices.}

\item{kernel}{An integer specifying the kernel function to use:
\itemize{
\item 1 = Epanechnikov kernel
\item 2 = Triangular kernel
\item 3 = Truncated exponential kernel
\item 4 = Normal (Gaussian) kernel
}
Default is 1.}

\item{dist.normalization.factor}{A positive numeric value (>= 1) used to
normalize distances in the kernel computation. Default is 1.01.}
}
\value{
A numeric vector containing the kernel-weighted neighbor mean for
each vertex.
}
\description{
Calculates the kernel-weighted mean value of the neighbors for each vertex
in a graph. The graph is represented as an adjacency list, with distances
provided as edge lengths, and values associated with each vertex.
}
\details{
The function computes weighted averages where weights are determined by a
kernel function applied to the edge distances. Smaller distances result in
larger weights. The distance normalization factor controls the bandwidth of
the kernel.
}
\examples{
\dontrun{
# Simple triangle graph
graph <- list(c(2, 3), c(1, 3), c(1, 2))
edge.lengths <- list(c(0.1, 0.2), c(0.1, 0.3), c(0.2, 0.3))
y <- c(1.0, 2.0, 3.0)

# Compute kernel-weighted means with Epanechnikov kernel
y.kwmean <- graph.kmean(graph, edge.lengths, y, kernel = 1)
print(y.kwmean)
}

}
\seealso{
\code{\link{graph.kmean.cv}} for cross-validation
}
