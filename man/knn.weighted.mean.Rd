% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_utils.R
\name{knn.weighted.mean}
\alias{knn.weighted.mean}
\title{Calculates K-Nearest Neighbor Weighted Mean}
\usage{
knn.weighted.mean(X, y, k, kernel = "epanechnikov", nn.factor = 1.01)
}
\arguments{
\item{X}{A matrix or data frame containing the predictor variables.}

\item{y}{A vector containing the response variable.}

\item{k}{An integer specifying the number of nearest neighbors to consider.}

\item{kernel}{A character string specifying the kernel function to use for weighting the neighbors.
Default is "epanechnikov". Other options include "uniform", "triangular", "biweight",
"triweight", "cosine", "gaussian", and "rank".}

\item{nn.factor}{A numeric value greater than 1 used to adjust the kernel bandwidth. Default is 1.01.}
}
\value{
A vector of weighted means of the response variable for each observation in \code{X}.
}
\description{
This function calculates the weighted mean of the response variable \code{y} for each observation in \code{X}
based on its k-nearest neighbors. The weights are determined by applying a kernel function to the
distances between each observation and its neighbors.
}
\details{
The function first finds the k-nearest neighbors for each observation in \code{X} using the
\code{get.knn()} function. It then calculates the distances between each observation and its
neighbors and applies the specified kernel function to the distances to obtain weights.
The weights are normalized to sum to 1 for each observation. Finally, the weighted mean
of the response variable is calculated for each observation using its neighbors' weights.
}
\examples{
X <- matrix(rnorm(100), ncol = 2)
y <- rnorm(50)
weighted_means <- knn.weighted.mean(X, y, k = 5)

}
