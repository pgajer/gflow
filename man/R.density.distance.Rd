% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats_utils.R
\name{R.density.distance}
\alias{R.density.distance}
\title{Calculates a Symmetric Density-Associated Distance}
\usage{
R.density.distance(p, q, p.density, q.density, density.func = NULL)
}
\arguments{
\item{p}{A numeric vector representing coordinates of the first point.}

\item{q}{A numeric vector representing coordinates of the second point.}

\item{p.density}{The density value at point p.}

\item{q.density}{The density value at point q.}

\item{density.func}{A function representing the density at a given point in the space (optional, default = NULL).}
}
\value{
The calculated density-associated distance between \code{p} and \code{q}.
}
\description{
This function computes a custom, symmetric distance metric between two
points \code{p} and \code{q} based on the provided density function \code{density.func}.
The Euclidean distance between \code{p} and \code{q} is normalized by the average
of the densities at these points, making the distance symmetric.
}
\details{
Any function that is non-negative over all points of the given set can be
used as a density function in this function. This allows for scaling of the
"density function" so that it affects the Euclidean distance more and more.
The function transform.ED() can be used to scale any "density function".
}
\examples{
density.func <- function(x) { return(dnorm(x, mean=0, sd=1)) }
p <- c(0, 0)
q <- c(1, 1)
p.density <- density.func(p)
q.density <- density.func(q)
R.density.distance(p, q, p.density, q.density, density.func)

}
