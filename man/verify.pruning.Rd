% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iknn_graphs.R
\name{verify.pruning}
\alias{verify.pruning}
\title{Verify Graph Pruning Implementation}
\usage{
verify.pruning(X, k, max.alt.path.length)
}
\arguments{
\item{X}{A numeric matrix where rows represent data points and columns represent features.
Data frames will be coerced to matrices.}

\item{k}{Integer scalar. The number of nearest neighbors to consider.}

\item{max.alt.path.length}{Integer. Maximum allowed length for alternative paths when
determining if an edge can be pruned.}
}
\value{
A list with the following components:
\describe{
\item{identical}{Logical. TRUE if no discrepancies were found between implementations.}
\item{total_discrepancies}{Integer. The total number of vertices with discrepancies.}
\item{discrepancies}{List of length n (number of vertices). NULL for vertices without
discrepancies. For vertices with discrepancies, contains a list with:
\itemize{
\item vertex: Integer index of the vertex
\item missing: Matrix of edges (vertex, weight) present in old but not new implementation
\item extra: Matrix of edges (vertex, weight) present in new but not old implementation
}}
}
}
\description{
Verifies the equivalence between old and new implementations of graph pruning
algorithms by comparing their outputs and identifying any discrepancies.
}
\examples{
\dontrun{
# Generate sample data
X <- matrix(rnorm(100 * 5), 100, 5)

# Verify pruning with k=5 neighbors and max path length of 3
result <- verify.pruning(X, k = 5, max.alt.path.length = 3)

# Check if implementations match
if (result$identical) {
  message("Implementations produce identical results")
} else {
  message(sprintf("Found \%d vertices with discrepancies",
                 result$total_discrepancies))
}
}

}
\seealso{
Related functions for graph construction and manipulation
}
