% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plot.chain.with.path}
\alias{plot.chain.with.path}
\title{Plot a Chain Graph with Optional Highlighted Paths}
\usage{
\method{plot}{chain.with.path}(
  x,
  vertex.size = 0.5,
  margin = 0.5,
  title = "Chain Graph with Highlighted Path",
  y.offset = 0.1,
  ...
)
}
\arguments{
\item{x}{An object of class "chain.with.path" containing the following elements:
\itemize{
\item \code{adj.list}: List of adjacency lists for each vertex, where each element
contains the indices of neighboring vertices
\item \code{weight.list}: List of corresponding weights for each adjacency,
matching the structure of adj.list
\item \code{gpd.obj}: List of path data objects, typically output from a
get.path.data function. Each object should contain a 'vertices' element
listing vertex indices in the path. The first object should have a
'ref_vertex' element indicating a reference vertex.
}}

\item{vertex.size}{Numeric value for the size of vertex points (default: 0.5)}

\item{margin}{Numeric value for the margin around the plot (default: 0.5)}

\item{title}{Character string for the plot title (default: "Chain Graph with Highlighted Path")}

\item{y.offset}{Numeric value for vertical offset of vertex labels (default: 0.1)}

\item{...}{Additional arguments (currently unused)}
}
\value{
No return value, called for side effects (plotting)
}
\description{
Creates a visualization of a chain graph where vertices are arranged horizontally.
The function can highlight specific paths and vertices based on path data,
and displays edge weights when they differ from 1.
}
\details{
The graph is plotted with vertices arranged horizontally at equal intervals.
Edge weights are displayed above the edges when they differ from 1.
Vertices in the paths specified by gpd.obj are highlighted with red circles,
and the reference vertex is highlighted with a larger blue circle.
}
\examples{
# Create a simple chain graph
adj_list <- list(
  c(2),    # Vertex 1 connected to 2
  c(1, 3), # Vertex 2 connected to 1 and 3
  c(2)     # Vertex 3 connected to 2
)
weight_list <- list(
  c(1),    # Weight for edge 1-2
  c(1, 2), # Weights for edges 2-1 and 2-3
  c(2)     # Weight for edge 3-2
)
path_data <- list(
  list(vertices = c(1, 2, 3), ref_vertex = 1)
)

chain.with.path.obj <- chain.with.path(adj_list, weight_list, path_data)
plot(chain.with.path.obj)

}
