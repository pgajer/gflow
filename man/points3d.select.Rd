% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_pts.R
\name{points3d.select}
\alias{points3d.select}
\title{Select Points in 3D Space Using RGL}
\usage{
points3d.select(
  objects = rgl::ids3d()$id,
  value = TRUE,
  closest = TRUE,
  multiple = TRUE,
  ...
)
}
\arguments{
\item{objects}{A vector of rgl object ID values to search within.
Defaults to all objects in the current rgl scene.}

\item{value}{Logical. If \code{TRUE} (default), returns the coordinates
of selected points. If \code{FALSE}, returns their indices.}

\item{closest}{Logical. If \code{TRUE} (default), returns the points
closest to the selection region when no points fall exactly within it.}

\item{multiple}{Logical or function. If \code{TRUE}, allows multiple
selections. If a function, it should accept the current selection
and return \code{TRUE} to continue selecting or \code{FALSE} to stop.}

\item{...}{Additional parameters passed to \code{rgl::select3d()}.}
}
\value{
If \code{value = TRUE}, returns a matrix with columns 'x', 'y', 'z'
containing the coordinates of selected points. If \code{value = FALSE},
returns a matrix with columns 'id' and 'index' identifying the selected
points within their respective objects.
}
\description{
A modified version of \code{rgl::selectpoints3d()} that provides more stable
point selection in 3D visualizations without crashing.
}
\details{
This function provides an interactive method for selecting points
in 3D space. It improves upon the original \code{selectpoints3d()} by
adding better error handling and preventing crashes that could occur
with certain object configurations.
}
\examples{
\dontrun{
library(rgl)
# Create a simple 3D scatter plot
x <- rnorm(100)
y <- rnorm(100)
z <- rnorm(100)
plot3d(x, y, z)

# Select points interactively
selected <- points3d.select()

# Highlight selected points
points3d(selected, col = "red", size = 10)
}

}
