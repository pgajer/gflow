% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plot.graph.3d}
\alias{plot.graph.3d}
\title{Plot a graph with a function z in 3D with basin extrema points}
\usage{
\method{plot}{graph.3d}(
  x,
  z = NULL,
  layout = "kk",
  conn.points = TRUE,
  use.spheres = TRUE,
  graph.alpha = 0.7,
  z.point.size = 0.5,
  z.color = NULL,
  z.alpha = 1,
  edge.color = "gray70",
  edge.width = 1,
  base.plane = TRUE,
  base.vertex.size = 0.5,
  z.scale = 1,
  show.axes = TRUE,
  vertical.lines = TRUE,
  vertical.line.style = "dashed",
  dash.length = 0.05,
  gap.length = 0.05,
  vertical.line.color = "darkgray",
  vertical.line.alpha = 0.5,
  vertical.line.width = 0.5,
  basins.df = NULL,
  evertex.sphere.radius = 0.2,
  evertex.min.color = "blue",
  evertex.max.color = "red",
  evertex.cex = 1,
  evertex.adj = c(0.5, 0.5),
  evertex.label.offset = 0.3,
  ...
)
}
\arguments{
\item{x}{One of the following:
\itemize{
\item A \code{graph.3d} object created by \code{graph.3d()}
\item A \code{ggraph} object created by \code{ggraph()}
\item A list returned by \code{plot.ggraph()} containing graph and layout elements
}}

\item{z}{A numeric vector containing z values for each vertex in the graph.
Required unless x is a graph.3d object that already contains z values.}

\item{layout}{Character string or matrix. Used only when x is a ggraph object:
\itemize{
\item Character options: "kk" (Kamada-Kawai), "fr" (Fruchterman-Reingold),
"nicely", "circle", "tree", "lgl", "graphopt", "drl", "dh", "mds"
\item Matrix: Pre-computed 2D layout coordinates (n x 2 matrix)
}
Default is "kk". Ignored when x already contains layout information.}

\item{conn.points}{Logical, whether to connect z-values with lines if their vertices
are connected in the original graph. Default is TRUE.}

\item{use.spheres}{Logical, whether to use spheres (TRUE) or points (FALSE) to
represent z values. Default is TRUE.}

\item{graph.alpha}{Numeric between 0 and 1, opacity of the original graph in the
x-y plane. Default is 0.7.}

\item{z.point.size}{Numeric, size of the points or spheres representing z values.
Default is 0.5.}

\item{z.color}{Color specification for z-values. Can be:
\itemize{
\item NULL: Uses rainbow colors based on z values (default)
\item Single color: Applied to all vertices
\item Vector of colors: Must match the number of vertices
}}

\item{z.alpha}{Numeric between 0 and 1, opacity of the z points/spheres. Default is 1.}

\item{edge.color}{Color for the edges connecting z values. Default is "gray70".}

\item{edge.width}{Numeric, width of the edges connecting z values. Default is 1.}

\item{base.plane}{Logical, whether to draw the original graph in the x-y plane.
Default is TRUE.}

\item{base.vertex.size}{Numeric, size of vertices in the base graph. Default is 0.5.}

\item{z.scale}{Numeric, scaling factor for z values. Default is 1.}

\item{show.axes}{Logical, whether to show 3D axes. Default is TRUE.}

\item{vertical.lines}{Logical, whether to draw vertical lines connecting base
vertices to z points. Default is TRUE.}

\item{vertical.line.style}{Character, style of vertical lines: "solid" or "dashed".
Default is "dashed".}

\item{dash.length}{Numeric, length of each dash when using dashed lines. Default is 0.05.}

\item{gap.length}{Numeric, length of gaps between dashes. Default is 0.05.}

\item{vertical.line.color}{Color for vertical lines. Default is "darkgray".}

\item{vertical.line.alpha}{Numeric between 0 and 1, opacity of vertical lines.
Default is 0.5.}

\item{vertical.line.width}{Numeric, width of vertical lines. Default is 0.5.}

\item{basins.df}{Data frame containing basin extrema information with columns:
\itemize{
\item \code{evertex}: Vertex indices (required)
\item \code{is_max}: 0 for minima, 1 for maxima (required)
\item \code{label}: Text labels for extrema (required)
}
Default is NULL (no extrema highlighted).}

\item{evertex.sphere.radius}{Numeric, radius of spheres representing extrema.
Default is 0.2.}

\item{evertex.min.color}{Color for local minima. Default is "blue".}

\item{evertex.max.color}{Color for local maxima. Default is "red".}

\item{evertex.cex}{Numeric, size of extrema labels. Default is 1.}

\item{evertex.adj}{Numeric vector of length 2, horizontal and vertical adjustment
of extrema labels. Default is c(0.5, 0.5).}

\item{evertex.label.offset}{Numeric, offset of labels from extrema points. Default is 0.3.}

\item{...}{Additional arguments (currently unused).}
}
\value{
NULL invisibly. The function creates an rgl 3D plot as a side effect.
}
\description{
Creates a 3D visualization using rgl where the graph structure is displayed in the x-y plane
and function values (z) are represented as points or spheres above the graph. The function
supports multiple input formats and can highlight basin extrema (local minima and maxima).
}
\details{
The function provides three workflows:

\strong{Workflow 1: Direct from ggraph}
\preformatted{
g <- ggraph(adj.list, weight.list)
plot.graph.3d(g, z.values)
}

\strong{Workflow 2: Using plot result}
\preformatted{
g <- ggraph(adj.list, weight.list)
plot.result <- plot(g)
plot.graph.3d(plot.result, z.values)
}

\strong{Workflow 3: Using graph.3d object}
\preformatted{
g3d <- graph.3d(plot.result, z.values)
plot(g3d)
}
}
\examples{
\dontrun{
# Create sample graph
adj.list <- list(c(2, 3), c(1, 3, 4), c(1, 2), c(2))
weight.list <- list(c(1, 1), c(1, 1, 1), c(1, 1), c(1))
z.values <- c(0.5, 1.2, 0.8, 1.5)

# Workflow 1: Direct from ggraph
g <- ggraph(adj.list, weight.list)
plot.graph.3d(g, z.values)

# Workflow 2: Using plot result with custom layout
plot.result <- plot(g, dim = 2, layout = "fr")
plot.graph.3d(plot.result, z.values, vertical.line.style = "solid")

# Workflow 3: Using graph.3d object
g3d <- graph.3d(plot.result, z.values)
plot(g3d, z.color = "red", base.plane = FALSE)

# With basin extrema highlighting
basins.df <- data.frame(
  evertex = c(1, 3),
  is_max = c(0, 1),
  label = c("Local Min", "Local Max")
)
plot.graph.3d(g, z.values, basins.df = basins.df)

# Custom styling
plot.graph.3d(g, z.values,
  z.color = heat.colors(4),
  vertical.line.style = "dashed",
  base.plane = TRUE,
  show.axes = TRUE
)
}

}
\seealso{
\code{\link{ggraph}} for creating graph objects,
\code{\link{plot.ggraph}} for 2D graph visualization,
\code{\link{graph.3d}} for creating graph.3d objects
}
