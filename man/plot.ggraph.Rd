% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graphics.R
\name{plot.ggraph}
\alias{plot.ggraph}
\title{Plot method for ggraph objects}
\usage{
\method{plot}{ggraph}(
  x,
  y = NULL,
  dim = 2,
  vertex.size = 1,
  vertex.radius = 0.1,
  vertex.label = NA,
  layout = "kk",
  vertex.color = NULL,
  draw.edges = TRUE,
  legend.cex = 1,
  legend.position = "topleft",
  quantize.method = "uniform",
  label.cex = 1.2,
  label.adj = c(0.5, 0.5),
  use.saved.layout = NULL,
  ...
)
}
\arguments{
\item{x}{A ggraph object created by ggraph()}

\item{y}{A function over vertices of the graph (optional)}

\item{dim}{The embedding dimension. Possible values 2 or 3. Default 2.}

\item{vertex.size}{Numeric scalar specifying the size of the vertices in the plot}

\item{vertex.radius}{Numeric scalar specifying the radius of spheres in 3D}

\item{vertex.label}{Character vector specifying the labels for vertices}

\item{layout}{Layout algorithm name (see details)}

\item{vertex.color}{Controls the color of vertices}

\item{draw.edges}{Set to TRUE to draw edges in 3d}

\item{legend.cex}{Size of legend window when y is not NULL}

\item{legend.position}{Character string specifying legend position}

\item{quantize.method}{Method to quantize a variable: "uniform" or "quantile"}

\item{label.cex}{Size of vertex labels in 3D plots}

\item{label.adj}{Horizontal and vertical adjustment of labels}

\item{use.saved.layout}{Layout matrix from previous call}

\item{...}{Additional parameters passed to igraph plot}
}
\value{
Invisibly returns a list containing graph, layout, and color information
}
\description{
Plot method for ggraph objects
}
\examples{
\dontrun{
# Create a ggraph object
adj_list <- list(c(2, 3), c(1, 3), c(1, 2))
weight_list <- list(c(1, 1), c(1, 1), c(1, 1))
g <- ggraph(adj_list, weight_list)

# Plot with default settings
plot.res <- plot(g)

# Plot with custom vertex size and labels
plot(g, vertex.size = 5, vertex.label = c("A", "B", "C"))

# Plot with a different layout
plot(g, layout = "in_circle")

# Recreate the same layout
plot(g, vertex.size = 2, use.saved.layout = plot.res$layout)
}
}
