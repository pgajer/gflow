% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean_shift_smoother.R
\name{knn_adaptive_mean_shift_gfa}
\alias{knn_adaptive_mean_shift_gfa}
\title{kNN-Adaptive Mean Shift with Gradient Field Averaging}
\usage{
knn_adaptive_mean_shift_gfa(
  X,
  k,
  density_k,
  n_steps,
  step_size,
  ikernel = 1L,
  dist_normalization_factor = 1.01,
  average_direction_only = FALSE
)
}
\arguments{
\item{X}{Numeric matrix (n x d), one row per point.}

\item{k}{Integer > 0, k-NN for gradient estimation (excl. self).}

\item{density_k}{Integer > 0, k-NN for density estimation (excl. self).}

\item{n_steps}{Integer > 0, number of iterations.}

\item{step_size}{Positive numeric constant step size per iteration.}

\item{ikernel}{Integer kernel id; 1=Gaussian, 2=Epanechnikov, 3=Quartic.}

\item{dist_normalization_factor}{Positive numeric distance scaling (default 1.01).}

\item{average_direction_only}{Logical; if TRUE, average directions only.}
}
\value{
A list with \code{X_traj} and \code{median_kdistances}; see
\code{\link{adaptive_mean_shift_gfa}}.
}
\description{
Adaptive in the sense that kNN is recomputed as points move, but with a
constant step size over iterations.
}
\examples{
set.seed(1)
X <- matrix(rnorm(200), ncol = 2)
out <- knn_adaptive_mean_shift_gfa(
  X, k = 10, density_k = 10, n_steps = 5, step_size = 0.1
)
sapply(out$X_traj, dim)
}
