% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{kNN.cltr.imputation}
\alias{kNN.cltr.imputation}
\title{kNN-Based Cluster Imputation}
\usage{
kNN.cltr.imputation(X, cltr, ref.cltr = 0, K = 20, use.geodesic.dist = FALSE)
}
\arguments{
\item{X}{Matrix representing the feature space in which the clustering is defined.
Each row represents an observation and columns represent features.}

\item{cltr}{Vector containing the initial clustering labels for each point in 'X'.
Must have the same length as nrow(X).}

\item{ref.cltr}{Cluster label designated as the reference cluster for reassignment
(default is 0). Points with this label will be reassigned to other clusters.}

\item{K}{Number of nearest neighbors used for cluster reassignment (default is 20).
Will be automatically adjusted to min(K, nrow(X)-1) if K exceeds available points.}

\item{use.geodesic.dist}{Logical flag indicating whether to use geodesic distance
instead of Euclidean distance (default is FALSE). Requires geodesic.knn() function
if set to TRUE.}
}
\value{
A vector containing the new clustering labels after iterative imputation.
The length and order match the input 'cltr' vector.
}
\description{
This function utilizes the k-Nearest Neighbors (k-NN) algorithm with a modified
majority vote strategy to reassign points in the reference cluster (typically cluster 0,
representing noise or outliers) to one of the non-reference clusters. The process
iterates until no further reduction in the size of the reference cluster is observed.
}
\details{
The algorithm works as follows:
\enumerate{
\item For each point in the reference cluster, find its K nearest neighbors
\item Among these neighbors, find the first neighbor that belongs to a non-reference cluster
\item Reassign the point to that cluster
\item Repeat until no more points can be reassigned
}

Note: The current implementation uses a "first valid neighbor" strategy rather than
a true majority vote. Points are assigned to the cluster of their first non-reference
neighbor, which may lead to suboptimal assignments in some cases.
}
\note{
\itemize{
\item If rownames are provided for X and names for cltr, they must match exactly
\item The function requires the FNN package for Euclidean k-NN search
\item If use.geodesic.dist = TRUE, the geodesic.knn() function must be available
\item The algorithm may not converge if the reference cluster contains isolated points
with no non-reference neighbors within K nearest neighbors
}
}
\examples{
\dontrun{
# Generate sample data with 3 clusters and some noise
set.seed(123)
X <- rbind(
  matrix(rnorm(100, mean = 0), ncol = 2),
  matrix(rnorm(100, mean = 5), ncol = 2),
  matrix(rnorm(100, mean = c(5, 0)), ncol = 2),
  matrix(runif(20, -2, 7), ncol = 2)  # noise points
)

# Initial clustering with some points labeled as 0 (noise)
cltr <- c(rep(1, 50), rep(2, 50), rep(3, 50), rep(0, 20))
names(cltr) <- rownames(X) <- paste0("point_", 1:nrow(X))

# Apply kNN imputation
new_cltr <- kNN.cltr.imputation(X, cltr, ref.cltr = 0, K = 10)

# Check results
table(Original = cltr, Imputed = new_cltr)
}

}
\seealso{
\code{\link[FNN]{get.knn}} for the k-NN implementation used
}
