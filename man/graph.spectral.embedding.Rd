% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph_spectrum.R
\name{graph.spectral.embedding}
\alias{graph.spectral.embedding}
\title{Generate Spectral Embedding of a Graph}
\usage{
graph.spectral.embedding(evectors, dim, evalues = NULL)
}
\arguments{
\item{evectors}{A numeric matrix of eigenvectors of the graph Laplacian.
Each column corresponds to an eigenvector, ordered by their corresponding
eigenvalues in descending order (largest to smallest).}

\item{dim}{An integer specifying the dimension of the embedding space
(\eqn{R^{dim}}). Must be between 1 and \code{ncol(evectors) - 1}.}

\item{evalues}{An optional numeric vector of eigenvalues corresponding to
the eigenvectors, also in descending order. If provided, the eigenvectors
will be scaled by dividing by the square root of their corresponding
eigenvalues, which can improve the embedding quality.}
}
\value{
A numeric matrix of dimension \code{nrow(evectors)} by \code{dim},
where each row represents the spectral embedding coordinates of a vertex
in \eqn{R^{dim}}.
}
\description{
Generates a spectral embedding of a graph into \eqn{R^d} using the
eigenvectors corresponding to the smallest non-zero eigenvalues of
the graph's Laplacian matrix. This embedding preserves the graph's
structural properties in a low-dimensional space.
}
\details{
Spectral embedding is a dimensionality reduction technique that uses the
eigenvectors of the graph Laplacian to embed vertices in a low-dimensional
space. The embedding preserves the connectivity structure of the graph,
placing connected vertices close to each other in the embedded space.

The function excludes the trivial constant eigenvector (associated with
eigenvalue 0) and uses the next \code{dim} eigenvectors corresponding to
the smallest non-zero eigenvalues.

When eigenvalues are provided, the eigenvectors are normalized by dividing
by the square root of their eigenvalues, which is a common practice in
spectral clustering and can lead to better separation of clusters.
}
\examples{
# Create example eigenvectors for 5 vertices
set.seed(123)
evectors <- matrix(rnorm(5 * 5), nrow = 5, ncol = 5)

# Apply Gram-Schmidt to ensure orthogonality
evectors <- qr.Q(qr(evectors))

# Generate 2D embedding without eigenvalue scaling
embedding_2d <- graph.spectral.embedding(evectors, dim = 2)

# Generate 3D embedding with eigenvalue scaling
evalues <- c(5, 3, 2, 0.5, 0)  # Example eigenvalues in descending order
embedding_3d_scaled <- graph.spectral.embedding(evectors, dim = 3, evalues)

}
\references{
von Luxburg, U. (2007). A tutorial on spectral clustering.
\emph{Statistics and Computing}, 17(4), 395-416.
}
\seealso{
\code{\link{graph.spectrum}}
}
