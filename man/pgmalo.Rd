% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgmalo.R
\name{pgmalo}
\alias{pgmalo}
\title{Path Graph Model Averaging Local Linear Model}
\usage{
pgmalo(
  neighbors,
  edge_lengths,
  y,
  y.true = NULL,
  use.median = TRUE,
  h.min = 4L,
  h.max = min(30L, length(y) - 2L),
  p = 0.95,
  n.bb = 50L,
  bb.max.distance.deviation = 1L,
  n.CVs = 100L,
  n.CV.folds = 10L,
  seed = 0L,
  kernel.type = 7L,
  dist.normalization.factor = 1.1,
  epsilon = 1e-15,
  verbose = FALSE
)
}
\arguments{
\item{neighbors}{List of integer vectors containing adjacency lists for each
vertex. Each element should contain valid vertex indices (1 to n).}

\item{edge_lengths}{List of numeric vectors containing positive edge lengths
corresponding to each adjacency. Must have same structure as neighbors.}

\item{y}{Numeric vector of response variables for each vertex.}

\item{y.true}{Optional numeric vector of true response values for computing
prediction errors. Must have same length as y.}

\item{use.median}{Logical; if TRUE uses median instead of mean for bootstrap
interval estimation (default: TRUE).}

\item{h.min}{Integer; minimum neighborhood size to consider. Must be even
and at least 4 (default: 4).}

\item{h.max}{Integer; maximum neighborhood size to consider. Must be even
and less than n-2 where n is the number of vertices (default: min(30, n-2)).}

\item{p}{Numeric; confidence level for bootstrap intervals. Must be between
0 and 1 (default: 0.95).}

\item{n.bb}{Integer; number of bootstrap iterations. Set to 0 to skip
bootstrap (default: 50).}

\item{bb.max.distance.deviation}{Integer; maximum distance deviation allowed
in bootstrap samples. Must be >= -1 (default: 1).}

\item{n.CVs}{Integer; number of cross-validation iterations (default: 100).}

\item{n.CV.folds}{Integer; number of cross-validation folds. Must be between
2 and n (default: 10).}

\item{seed}{Integer; random seed for reproducibility (default: 0).}

\item{kernel.type}{Integer between 1 and 10 specifying the kernel function:
\itemize{
\item 1 = Gaussian
\item 2 = Epanechnikov
\item 3 = Quartic
\item 4 = Triweight
\item 5 = Tricubic
\item 6 = Cosine
\item 7 = Uniform (default)
\item 8-10 = Additional kernels (see documentation)
}}

\item{dist.normalization.factor}{Numeric; factor for normalizing distances.
Must be greater than 1 (default: 1.1).}

\item{epsilon}{Numeric; numerical stability threshold. Must be positive
(default: 1e-15).}

\item{verbose}{Logical; if TRUE prints progress messages (default: FALSE).}
}
\value{
An S3 object of class "pgmalo" containing:
\describe{
\item{h_values}{Integer vector of tested neighborhood sizes}
\item{opt_h}{Optimal neighborhood size selected by cross-validation}
\item{opt_h_idx}{Index of optimal h in h_values vector}
\item{h_cv_errors}{Numeric vector of cross-validation errors for each h}
\item{true_errors}{Numeric vector of true prediction errors (if y.true provided)}
\item{predictions}{Numeric vector of predictions using optimal h}
\item{local_predictions}{Numeric vector of locally adaptive predictions}
\item{h_predictions}{List of prediction vectors for each h value}
\item{bb_predictions}{Matrix of bootstrap predictions (n.bb x n)}
\item{ci_lower}{Numeric vector of lower confidence bounds}
\item{ci_upper}{Numeric vector of upper confidence bounds}
\item{has_bootstrap}{Logical indicating if bootstrap was performed}
\item{call}{The matched call}
}
}
\description{
Fits a path graph model averaging local linear model using cross-validation
to select optimal neighborhood sizes. The function implements adaptive
bandwidth selection for graph-structured data with optional bootstrap
confidence intervals.
}
\details{
The Path Graph Model Averaging Local Linear (PGMALO) method performs
local linear regression on graph-structured data. For each vertex, it
considers neighborhoods of different sizes and uses cross-validation to
select the optimal neighborhood size globally or locally.

The method accounts for the graph structure through path distances and
applies kernel weighting based on these distances. Bootstrap sampling
can be used to quantify prediction uncertainty.
}
\examples{
\donttest{
# Create a simple chain graph
n <- 50
neighbors <- vector("list", n)
edge_lengths <- vector("list", n)

# Build chain structure
for(i in 1:n) {
  if(i == 1) {
    neighbors[[i]] <- 2L
    edge_lengths[[i]] <- 1.0
  } else if(i == n) {
    neighbors[[i]] <- (n-1L)
    edge_lengths[[i]] <- 1.0
  } else {
    neighbors[[i]] <- c(i-1L, i+1L)
    edge_lengths[[i]] <- c(1.0, 1.0)
  }
}

# Generate smooth response with noise
x_pos <- seq(0, 1, length.out = n)
y <- sin(2 * pi * x_pos) + rnorm(n, 0, 0.1)

# Fit model with small h range for speed
  fit <- pgmalo(neighbors, edge_lengths, y, h.max = 10, n.CVs = 10)
  summary(fit)
  print(fit)
}

}
\references{
Goldstein, L., Chu, B., Nayak, S., and Minsker, S. (2024).
"Path Graph Model Averaging Local Linear Estimation."
\emph{Journal of Statistical Software} (forthcoming).
}
\seealso{
\code{\link{upgmalo}} for univariate version,
\code{\link{plot.pgmalo}} for visualization
}
