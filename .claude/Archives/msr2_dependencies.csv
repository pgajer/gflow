filename,total_functions,dependent_functions,function_names,dependent_calls
maelog.R,1,0,maelog,
magelog.R,1,0,magelog,
mstree_total_length.R,1,0,compute.mstree.total.length,
nada_graph_spectral_lowess.R,1,0,nada.graph.spectral.lowess,
outlier_detection.R,1,0,remove.knn.outliers,
parameterize_circular_graph.R,1,0,parameterize.circular.graph,
ray_agemalo.R,1,0,ray.agemalo,
spectral_lowess_graph_smoothing.R,1,0,spectral.lowess.graph.smoothing,
uggmalog.R,1,0,uggmalog,
uniform_grid_graph.R,1,0,create.grid.graph,
generate_knn_example_data.R,2,0,"generate.mixed.points, plot.mixed.points",
graph_analysis_sequence.R,2,0,"compute.graph.analysis.sequence, convert_to_1based",
graph_knn_regression.R,2,0,"graph_knn_regression, graph_lowess_deg0",
graph_lowess_deg1.R,2,0,"graph_lowess_deg1, graph_lowess_deg1_spectral",
kNN.R,2,0,"kNN.fn, kNN.v2.fn",
pruning_long_edges.R,2,0,"find.shortest.alt.path, shortest.alt.path.length",
state_space_end_pts_labels.R,2,0,"label.ag.3d, label.zbtx.3d",
uggmalo.R,2,0,"uggmalo, uggmalo.bayesian.bootstrap.with.uncertainty",
ulogit.R,2,0,"eigen.ulogit, ulogit",
agemalo.R,3,0,"agemalo, test.bidirectional.dijkstra, verify.paths",
fn_graphs.R,3,0,"analyze.function.aware.weights, construct.function.aware.graph, plot.function.aware.weights",
graph_maximal_packing.R,3,0,"create.maximal.packing, validate.maximal.packing, verify.maximal.packing",
hist_plots.R,3,0,"hist1, hist2, hist3",
local_complexity.R,3,0,"binary.local.complexity, pt.binary.local.complexity, pt.local.complexity",
math_utils.R,3,0,"bb.integrals, calculate.integrals, old.bb.integrals",
mean_shift_smoother.R,3,0,"mean.shift.data.smoother, mean.shift.data.smoother.adaptive, mean.shift.data.smoother.with.grad.field.averaging",
mknn_graphs.R,3,0,"create.mknn.graph, create.mknn.graphs, summary.mknn_graphs",
amagelo.R,4,0,"amagelo, print.amagelo, print.summary.amagelo, summary.amagelo",
gflow_basins.R,4,0,"find.gflow.basins, find.local.extrema, print.summary.gflow_basins, summary.gflow_basins",
graph_bw_adaptive_spectral_smoother.R,4,0,"graph.bw.adaptive.spectral.smoother, print.graph_bw_adaptive_spectral_smoother, print.summary.graph_bw_adaptive_spectral_smoother, summary.graph_bw_adaptive_spectral_smoother",
graph_edge_weight_deviations.R,4,0,"compute.edge.weight.deviations, compute.edge.weight.rel.deviations, remove.redundant.edges, remove.redundant.edges.with.rel.dev",
graph_gradient_flow_basins.R,4,0,"compute.graph.gradient.flow, lmax.basins, lmin.basins, set.boundary",
graph_low_pass_smoother.R,4,0,"klaps.low.pass.smoother, print.klaps_low_pass_smoother, print.summary.klaps_low_pass_smoother, summary.klaps_low_pass_smoother",
graph_spectral_filter.R,4,0,"graph.spectral.filter, print.graph_spectral_filter, print.summary.graph_spectral_filter, summary.graph_spectral_filter",
graph_spectrum.R,4,0,"graph.spectral.embedding, graph.spectrum, low.pass.filter, old.graph.spectral.embedding",
hHN_graphs.R,4,0,"bbmwd.over.hHN.graphs, create.hHN.graph, exclusion.cv.mad.over.hHN.graphs, imputation.cv.mad.over.hHN.graphs",
mst_completion_graphs.R,4,0,"create.cmst.graph, print.mst_completion_graph, print.summary.mst_completion_graph, summary.mst_completion_graph",
select_pts.R,4,0,"select.3d.pts, select.points3d, show.profile, simple.select.3d.pts",
graph_deg0_lowess_buffer_cv.R,5,0,"graph.deg0.lowess.buffer.cv, plot.graph_deg0_lowess_buffer_cv, print.graph_deg0_lowess_buffer_cv, print.summary.graph_deg0_lowess_buffer_cv, summary.graph_deg0_lowess_buffer_cv",
graph_deg0_lowess_cv.R,5,0,"graph.deg0.lowess.cv, plot.graph_deg0_lowess_cv, print.graph_deg0_lowess_cv, print.summary.graph_deg0_lowess_cv, summary.graph_deg0_lowess_cv",
graph_edit_distance.R,6,0,"analyze.distances, calculate.edit.distances, create.distance.plot, graph.edit.distance, graph.edit.distance.R, load.graph.data",
graph_kernel_smoother.R,6,0,"estimate.optimal.bandwidth.from.extrema.elbow, graph.kernel.smoother, plot.graph_kernel_smoother, print.graph_kernel_smoother, print.summary.graph_kernel_smoother, summary.graph_kernel_smoother",
nerve_cx_spectral_filter.R,6,0,"compare.graph.vs.nerve.cx.filtering, nerve.cx.spectral.filter, plot.nerve_cx_spectral_filter, print.nerve_cx_spectral_filter, print.summary.nerve_cx_spectral_filter, summary.nerve_cx_spectral_filter",
graph_diffusion_smoother.R,7,0,"ext.graph.diffusion.smoother, gds_grid_search, graph.diffusion.matrix.smoother, graph.diffusion.smoother, graph.diffusion.smoother.with.rescaling, instrumented.gds, plot.instrumented.gds",
harmonic_smoother.R,7,0,"get.region.boundary, harmonic.smoother, perform.harmonic.smoothing, plot.harmonic_smoother, print.harmonic_smoother, print.summary.harmonic_smoother, summary.harmonic_smoother",
pgmalog.R,8,0,"plot.diagnostic, plot.fit, plot.residuals, plot.residuals.hist, plot.upgmalog, print.summary.upgmalog, summary.upgmalog, upgmalog",
two_factor_analysis.R,8,0,"analyze.categorical.proportions, analyze.weighted.cst, create_latex_table, old.analyze.categorical.proportions, save_results, summarize.and.test.cst, two.factor.analysis, v0.summarize.and.test.cst",
geodesic_stats.R,9,0,"compute.geodesic.stats, compute.vertex.geodesic.stats, plot.geodesic_stats, plot.overlap.distribution, plot.vertex_geodesic_stats, print.geodesic_stats, summarize_overlap_statistics, summary.geodesic_stats, summary.vertex_geodesic_stats",
pgmalo.R,9,0,"pgmalo, plot.diagnostic, plot.fit, plot.residuals, plot.residuals.hist, plot.upgmalo, print.summary.upgmalo, summary.upgmalo, upgmalo",
latex.R,10,0,"add.tbl.to.latex.file, bin.ME.freq.perc.latex.tbl, create.freq.perc.latex.tbl, create.latex.table, includegraphics, includegraphics.by3, includegraphics2, includegraphics3, replace.latex.multicolumn.types.dynamic, replace.latex.tabular.types.dynamic",
graph_kmean.R,11,0,"graph.kmean, graph.kmean.bb.cri, graph.kmean.cv, plot.ugkmm, plot_diagnostic, plot_fit, plot_residuals, plot_residuals_hist, print.summary.ugkmm, summary.ugkmm, univariate.gkmm",
graphics.R,12,0,"itriangle.plot, plot.MSD, plot.chain.with.path, plot.graph, plot.graph.3d, plot.graphMScx, plot.kh.matrix, plot.model.errors, plot.prediction.errors, plot_igraph_3d, splot, triangle.plot",
graph_wave_smoothers.R,13,0,"adaptive.time.step, adaptive.wave.smoothing, alpha.func, apply.dirichlet.bc, apply.neumann.bc, backward.euler, crank.nicolson, damped.wave.equation, forward.euler, high.freq.damped.wave, leapfrog, wave.equation, wave.smoothing",
path_graphs.R,14,0,"compare.edge.sets, compare.paths, create.path.graph, create.path.graph.series, create.plm.graph, get.accessibility.matrix, get.edge.set, get.shortest.path, min.h.for.path, new.path.graph, print.path.graph, print.path.graph.series, summary.path.graph, summary.path.graph.series",
usmoothers.R,14,0,"create.comparison.df, gam.fit, kern.fit.loocv, kernlog.fit.loocv, loclog.fit.cv, loclog.fit.loocv, locpoly.fit.loocv, loess.fit.loocv, lowess.fit.loocv, old.loess.fit.loocv, pspline.fit.loocv, rf.fit, sm.spline.bb, vcm.fit",
bias_utils.R,22,0,"get.1d.binary.models.MABs, get.1d.models.MABs, get.gam.spline.MAB, get.gausspr.MAB, get.glmnet.spline.MAB, get.krr.MAB, get.krr.MAB.xD, get.locpoly.MAB, get.loess.MAB, get.loess.MAB.xD, get.np.MAB.xD, get.optimal.ntree, get.random.forest.MAB, get.random.forest.MAB.xD, get.random.forest.cv.MAB, get.rllm.MAB, get.rllm.MAB.xD, get.smooth.spline.MAB, get.spline.MAB.xD, get.svm.MAB, get.svm.MAB.xD, v1.get.spline.MAB",
magelo.R,31,0,"Clevelands.1D.deg0.loop, Clevelands.1D.deg12.loop, deg0.loo.llm.1D, fb.lm.1D, fb.rllm.1D, get.BB.gpredictions, get.gpredictions.CrI, get.gpredictionss, lcor.1D, llm.1D.beta, llm.1D.beta.perms, llm.1D.fit.and.predict, llm.1D.fit.and.predict.BB.CrI, llm.1D.fit.and.predict.global.BB, llm.1D.fit.and.predict.global.BB.CrI, llm.1D.fit.and.predict.global.BB.qCrI, loo.llm.1D, lsr.1D, magelo, magelo.fit, magelo.plot.diagnostic, magelo.plot.fit, mllm.1D, mllm.1D.fit.and.predict, plot.magelo, predict.1D, predict.rllm1D, rllm.2os.1D, rllmf.1D, row.eval, wpredict.1D",
plot_utils.R,31,0,"add.grad.ED.arrows, bin.segments3d, circle.plot, cont.segments3d, draw.3d.line, draw.axes, draw.dashed.line3d, hor.error.bar, mae.plot, map.S.to.X, panel.acor, panel.rlm, path.fn, plot.cltr.profiles, plot.diskEmbdg, plot.geodesic.3D, plot.node.level.props, plot2d.cont, plot2d.tree, plot3d.cl, plot3d.cltrs, plot3d.cont, plot3d.path, plot3d.plain, plot3d.tree, plotlcor.1D, quantize.for.legend, scale01, show.3d.cl, show.cltrs, vert.error.bar",
2d_smooth_morse_smale.R,56,0,"check.critical.point.values, check.gradient.consistency, check.point.values, compute.all.trajectories, compute.gradient.trajectory, compute.gradient.trajectory1, compute.morse.smale.cells, compute.morse.smale.cells1, compute.separatrices, create.grid, create_point, debugging.find.critical.points.with.gradient, draw.mid.arrow, draw.p.mid.arrow, evaluate.along.direction, evaluate.function.on.grid, evaluate.function.on.grid.as.vector, evaluate.mixture.on.grid, find.all.boundary.maxima, find.ascending.trajectory.from.point, find.critical.points.improved, find.critical.points.with.gradient, find.descending.trajectory.from.point, find.edge.maximum, find.grid.critical.points, find.indices.of.grid.critical.points, find.interior.saddle, find.line.intersection, find.next.ascending.point, find.next.ascending.point1, find.next.descending.point, find.next.descending.point1, generate.circle.points, get.neighbors, identify.destination.minimum, is.local.maximum, is.local.minimum, numerical.second.derivative, plot.critical.points, plot.function.contours, plot.gradient.trajectories, plot.gradient.trajectory, plot.grid.critical.points, plot.morse.analysis, plot.morse.smale.cells, plot.morse.smale.cells1, plot.morse.smale.complex, plot.morse.smale.complex.from.critical, plot.morse.smale.trajectories.from.point, plot.separatrices, plot.separatrices.with.cells, plot.trajectory.with.arrow, project.gradient.to.boundary, refine.critical.points, sample.points.for.visualization, v2.plot.separatrices.with.cells",
gflow_cx.R,6,1,"compute.extrema.hop.nbhds, create.gflow.cx, create_hop_nbhd_extrema_df, print.gflow_cx, v1.create_hop_nbhd_extrema_df, visualize.smoothing.steps",plot.graph.3d
monotonic_reachability.R,6,1,"create.grid.graph, plot.monotonic_reachability, plot_gaussian_peak_3d, test.extrema.on.gaussian.mixture, test.monotonic.reachability, test_gaussian_peak_monotonicity",detect.local.extrema
local_extrema.R,11,1,"detect.local.extrema, plot.local_extrema, print.summary.local_extrema, summary.local_extrema, test.extrema.on.gaussian.landscape, unweighted.compute.persistence, vertices, vertices.local_extrema, visualize.extrema.3d, visualize.extrema.on.grid, weighted.compute.persistence",create.grid.graph
gflow_cx_utils.R,7,2,"analyze.harmonic.extensions, apply.harmonic.extension, compare.harmonic.methods, extract.extrema.subgraphs, find.hop.distances, find.vertices.within.hops, visualize.harmonic.extension","plot.graph, plot.graph.3d"
geodesics.R,24,2,"E.geodesic.F, E.geodesic.X, compute_geodesic_path, create.tubular.nbhd.of.a.geodesic, dist.to.knn, estimate.geodesic.distances, estimate_density, euclidean.distance, fig.E.geodesic.F, geodesic.dist, geodesic.knn, geodesic.knnx, o.inv.fn, old.subdivide.path, path.dist, path.length, smooth.PL.geodesic, smooth.geodesic, subdivide.path, subdivide.path.v1, subj.D.risk, subj.factor.ppmEy.profs.df, subj.factor.signEy.profs, vars.approx.monotonically.assoc.with.geodesic","fb.rllm.1D, standardize.string"
basin_cx.R,35,2,"attach_basin_labels, basins.union, calculate_basin_distances, cluster_basins_by_overlap, compute_asc_desc_cell_intersection_matrix, construct_basin_cx_graph, create.basin.cx, create.taxonomic.labels, create_basin_cell_complex, create_basins_df, create_extrema_df, create_threshold_distance_graph, extract.basins.vertices, extract_basins_vertices, get.basin.vertices, get_basin_by_label, get_basin_vertices, get_cell_vertices, graph_embedding, intersection_size_matrix, merge.basin.cx, merge_basin_clusters, overlap_distance_matrix, plot.basin, plot.basin_cx, plot_basin_cx_graph, print.basin_cx, print.summary.basin_cx, relabel_distance_matrices, reorder_basin_dataframes, replace.basin.label.basin_cx, show.basin, show.basin.basin_cx, summarize_cells, summary.basin_cx","plot.graph, prof.fn"
graph_gradient_flow.R,11,3,"construct.gradient.flow.graph, construct.graph.gradient.flow, create.extrema.taxonomic.labels, create.gradient.flow.contingency.table, create.gradient.flow.frequency.tables, merge.basins, old.construct.gradient.flow.graph, plot.ggflow, print.summary.ggflow, replace.basin.label, summary.ggflow","draw.mid.arrow, draw.p.mid.arrow, prof.fn"
annotation.R,8,4,"add.cag.tx.to.colnames, mb.char.fn, mb.pairs.pathways, prof.fn, reverse.pair, show.tx, standardize.string, uq.mb.pair","hdbscan.cltr, kNN.cltr.imputation, plot3d.cltrs, reorder.clusters"
clustering.R,28,4,"NN.cltr.imputation, cluster.indices.ordered.by.size, controlled.synthetic.Gaussian.2D.clustering, create.sp.CAGs, ehclust, ehclust.cross.dist, embedd.and.cltr, gene.cltr.tx.purity, generate.cluster, hdbscan.cltr, inductive.clustering, kNN.cltr.imputation, knn.recltrg, log.likelihood.cut.tree, neighbor.cltrs, optimize.min.pts, plot.ehclust, plot.embedAndCltr, plot.tx, reembed.cltr, relabel.int.cltrg, reorder.clusters, split.cltrs, split.max.cltr, spp.cltr.freq, spp.cltr.freq.ehclust, synthetic.Gaussian.2D.clustering, within.cluster.means","Rpacmap, geodesic.knn, plot3d.cltrs, show.tx"
